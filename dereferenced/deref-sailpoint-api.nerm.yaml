openapi: 3.0.0
info:
  version: 1.0.0
  title: NERM API
  description: The NERM API accesss and modifies resources in your environment.
  license:
    name: MIT
servers:
  - url: https://{tenantName}.nonemployee.com/api
    variables:
      tenantName:
        default: acmeco
        description: Tenant name assigned to customer
security:
  - bearerAuth: []
paths:
  /ne_attributes:
    get:
      summary: Get attribute data in bulk
      operationId: getAttributes
      description: This endpoint can retrieve attribute data in bulk from Lifecycle or you can search for attributes using parameters
      tags:
        - attributes
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/label'
        - $ref: '#/components/parameters/data_type'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/Attributes_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create an attribute
      operationId: createAttribute
      description: This endpoint can create an attribute
      tags:
        - attributes
      requestBody:
        $ref: '#/components/requestBodies/Attribute'
      responses:
        '201':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /ne_attributes/{id}:
    get:
      summary: Find attribute data by id
      operationId: getAttributeById
      description: Info for a specific attribute
      tags:
        - attributes
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update attribute data by id
      operationId: updateAttributeById
      description: Update info for a specific attribute
      tags:
        - attributes
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/Attribute'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete attribute by id
      operationId: deleteAttributeById
      description: Delete attribute by id
      tags:
        - attributes
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /ne_attributes/{uid}:
    get:
      summary: Find attribute data
      operationId: getAttributeByUid
      description: Info for a specific attribute by UID (user-specified identifier)
      tags:
        - attributes
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update attribute data
      operationId: updateAttributeByUid
      description: Update info for a specific attribute by UID (user-specified identifier)
      tags:
        - attributes
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        $ref: '#/components/requestBodies/Attribute'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete attribute
      operationId: deleteAttributeByUid
      description: Delete attribute by UID (user-specified identifier)
      tags:
        - attributes
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /ne_attribute_option:
    post:
      summary: Add value to option
      operationId: submitAttributeOption
      description: Adds a value to an option based attribute
      tags:
        - attribute options
      requestBody:
        $ref: '#/components/requestBodies/AttributeOption'
      responses:
        '200':
          $ref: '#/components/responses/AttributeOption'
        '405':
          $ref: '#/components/responses/InvalidInput'
  /ne_attribute_options:
    get:
      summary: Get option based attribute values
      operationId: getAttributeOptions
      description: Get option based attribute values
      tags:
        - attribute options
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/ne_attribute_id'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/AttributeOptions_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create multiple option values
      operationId: submitAttributeOptions
      description: Create multiple new option based attribute values
      tags:
        - attribute options
      requestBody:
        $ref: '#/components/requestBodies/AttributeOptions'
      responses:
        '200':
          $ref: '#/components/responses/AttributeOptionsJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update multiple option values
      operationId: patchAttributeOptions
      description: Update multiple option based attribute values
      tags:
        - attribute options
      requestBody:
        $ref: '#/components/requestBodies/AttributeOptions-2'
      responses:
        '200':
          $ref: '#/components/responses/AttributeOptionsJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /ne_attribute_options/{id}:
    get:
      summary: Find option based attribute value
      operationId: getAttributeOptionById
      description: Info for a specific option based attribute value by id
      tags:
        - attribute options
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/AttributeOption'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update option based attribute value
      operationId: patchAttributeOptionById
      description: Update a option based attribute value by id
      tags:
        - attribute options
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/AttributeOption'
      responses:
        '200':
          $ref: '#/components/responses/AttributeOption'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete option based attribute value
      operationId: deleteAttributeOptionById
      description: Delete a option based attribute value by id
      tags:
        - attribute options
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/DeleteConfirmation'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /ne_attribute_options/{uid}:
    get:
      summary: Find option attribute value
      operationId: getAttributeOptionByUid
      description: Get a specific option based attribute value by UID (user-specified identifier)
      tags:
        - attribute options
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/AttributeOption'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update option value
      operationId: patchAttributeOptionByUid
      description: Update a option based attribute value by UID (user-specified identifier)
      tags:
        - attribute options
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        $ref: '#/components/requestBodies/AttributeOption'
      responses:
        '200':
          $ref: '#/components/responses/AttributeOption'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete option value
      operationId: deleteAttributeOptionByUid
      description: Delete a option based attribute value by UID (user-specified identifier)
      tags:
        - attribute options
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/DeleteConfirmation'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /advanced_search:
    get:
      summary: Get saved advanced search queries
      operationId: getAdvancedSearch
      description: Get saved advanced search queries
      tags:
        - advanced search
      responses:
        '200':
          $ref: '#/components/responses/AdvancedSearches'
    post:
      summary: Save an advanced search query
      operationId: submitAdvancedSearch
      description: Save an advanced search query for later use
      tags:
        - advanced search
      requestBody:
        $ref: '#/components/requestBodies/AdvancedSearch'
      responses:
        '200':
          $ref: '#/components/responses/AdvancedSearch'
  /advanced_search/run:
    post:
      summary: Run profiles advanced search
      operationId: searchAdvancedSearch
      description: Run an advanced search for profiles, without saving the query
      tags:
        - advanced search
      parameters:
        - $ref: '#/components/parameters/query'
      requestBody:
        $ref: '#/components/requestBodies/AdvancedSearch'
      responses:
        '200':
          $ref: '#/components/responses/Profiles'
  /advanced_search/{id}:
    patch:
      summary: Update a saved advanced search
      operationId: patchAdvancedSearch
      description: Update a saved advanced search query
      tags:
        - advanced search
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/AdvancedSearch-2'
      responses:
        '200':
          $ref: '#/components/responses/AdvancedSearch'
  /advanced_search/{id}/run:
    get:
      summary: Run a saved advanced search
      operationId: searchAdvancedSearchbyID
      description: Run a saved advanced search query
      tags:
        - advanced search
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          $ref: '#/components/responses/Profiles'
  /audit_events/query:
    post:
      summary: Query for Audit events
      description: |-
        This endpoint provides a search engine for Audit Events by optionally combining subject_type, type, and subject_id to narrow down the audit events. A Subject Type of Profile links up to the AuditableProfile types. An Subject Type of WorkflowSession links up to the AuditableWorkflow types. An Subject Type of Get/Post/Patch/Delete links up to the AuditableApi types. The remaining Subject Types link up to the ActiveRecord types (configuration changes).

        - Any workflow audit event created as of 10/11/2024 will be able to be queried by workflow name, workflow uid, or workflow profile type.
        - Any profile audit event created as of 10/11/2024 will be able to be queried by profile type.
        - The entity_type parameter has been updated to subject_type, which now matches what is in the response object.
        - With the additional query filters added, there is a max of 5 filter parameters at one time (aside from pagination parameters)

        To accommodate these changes, an API contract change was required.  Please read the updated API documentation for the new request syntax.
      operationId: search
      tags:
        - audits
      requestBody:
        $ref: '#/components/requestBodies/AuditEvents'
      responses:
        '200':
          $ref: '#/components/responses/AuditEvents'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /idproxy/data_records/{id}/reassign:
    patch:
      summary: Reassign data record
      operationId: patchDataRecord
      description: Consolidation is a deprecated feature, this endpoint provides a mechanism to reassign a data record to a new master record to assist customers.
      tags:
        - consolidation
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/Consolidation'
      responses:
        '200':
          description: The data record has been reassigned.
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /idproxy/identities/{id}:
    delete:
      summary: Delete a master record
      operationId: deleteMasterRecord
      description: Consolidation is a deprecated feature, this endpoint provides a mechanism to delete a master record to assist customers.
      tags:
        - consolidation
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Master record deleted.
        '400':
          description: Error deleting master record
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: A message describing the error that occurred
                    type: string
        '500':
          $ref: '#/components/responses/500'
  /delegations:
    get:
      summary: List delegations
      description: Returns a list of delegation records, optionally filtered by delegate, delegator, or expiration status.
      tags:
        - delegations
      parameters:
        - $ref: '#/components/parameters/delegate_id'
        - $ref: '#/components/parameters/delegator_id'
        - $ref: '#/components/parameters/expired'
        - $ref: '#/components/parameters/metadata'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/Delegations'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create a delegation
      description: Create a new delegation record.
      tags:
        - delegations
      requestBody:
        $ref: '#/components/requestBodies/Delegation'
      responses:
        '201':
          $ref: '#/components/responses/Delegation'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /delegations/{id}:
    get:
      summary: Get a single delegation
      description: Returns a single delegation record by its ID.
      tags:
        - delegations
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Delegation'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a delegation
      description: Update an existing delegation record.
      tags:
        - delegations
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/Delegation-2'
      responses:
        '200':
          $ref: '#/components/responses/Delegation'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a delegation
      description: Delete an existing delegation record.
      tags:
        - delegations
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: The delegation record '<delegation_id>' has been destroyed.
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /forms:
    get:
      summary: Get forms
      operationId: getForms
      description: Get defined forms in the system
      tags:
        - forms
      responses:
        '200':
          $ref: '#/components/responses/Forms'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create a form
      description: This endpoint can create a form
      operationId: createForm
      tags:
        - forms
      requestBody:
        $ref: '#/components/requestBodies/Forms'
      responses:
        '200':
          $ref: '#/components/responses/Forms'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /forms/{id}:
    get:
      summary: Get form data by Id
      operationId: getFormById
      description: Info for a specific form
      tags:
        - forms
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Forms'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update form data by id
      operationId: updateFormById
      description: Update info for a specific form
      tags:
        - forms
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/Form'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete form by id
      operationId: deleteFormById
      description: Delete form by id
      tags:
        - forms
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /forms/{uid}:
    get:
      summary: Get form data by UID
      operationId: getFormByUid
      description: Info for a specific form
      parameters:
        - $ref: '#/components/parameters/uid'
      tags:
        - forms
      responses:
        '200':
          $ref: '#/components/responses/Forms'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update form data by UID
      operationId: updateFormByUid
      description: Update info for a specific form
      tags:
        - forms
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        $ref: '#/components/requestBodies/Form'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete form by UID
      operationId: deleteFormByUid
      description: Delete form by UID
      tags:
        - forms
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/Attribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /form_attributes:
    get:
      summary: Get form attributes
      operationId: getFormAttributes
      description: Get defined form attribute in the system
      tags:
        - form attributes
      responses:
        '200':
          $ref: '#/components/responses/FormAttribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create a form attribute
      description: This endpoint can create a form attribute
      operationId: createFormAttribute
      tags:
        - form attributes
      requestBody:
        $ref: '#/components/requestBodies/FormAttribute'
      responses:
        '200':
          $ref: '#/components/responses/FormAttribute'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /form_attributes/{id}:
    get:
      summary: Get form attribute data
      operationId: getFormAttributeById
      description: Gets info for a specific form attribute by ID
      tags:
        - form attributes
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/FormAttribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update form attribute data
      operationId: updateFormAttributeById
      description: Update info for a specific form attribute by ID
      tags:
        - form attributes
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/FormAttribute-2'
      responses:
        '200':
          $ref: '#/components/responses/FormAttribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete form attribute
      operationId: deleteFormAttributeById
      description: Delete form attribute by id
      tags:
        - form attributes
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/FormAttribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /form_attributes/{uid}:
    get:
      summary: Get form attribute data
      operationId: getFormAttributeByUid
      description: Get info for a specific form attribute by UID
      tags:
        - form attributes
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/FormAttribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update form attribute data
      operationId: updateFormAttributeByUid
      description: Update info for a specific form attribute by UID
      tags:
        - form attributes
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        $ref: '#/components/requestBodies/FormAttribute-2'
      responses:
        '200':
          $ref: '#/components/responses/FormAttribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete form attribute
      operationId: deleteFormAttributeByUid
      description: Delete form attribute by UID
      tags:
        - form attributes
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/FormAttribute'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /identity_proofing_results:
    get:
      summary: Get identity proofing result data
      operationId: getIdentityProofingResults
      description: Retrieves identity proofing result data in bulk from Lifecycle
      tags:
        - identity proofing results
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/profile_id'
        - $ref: '#/components/parameters/workflow_session_id'
        - $ref: '#/components/parameters/result'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/IdentityProofingResults'
  /isc/accounts:
    get:
      summary: Get Profiles
      operationId: getSchemaMappedProfilesCollection
      description: Retrieve schema-mapped profiles collection. It returns a collection of stored profiles, optionally using schema-mapped field names if requested.
      tags:
        - isc accounts
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/use_schema'
        - $ref: '#/components/parameters/override_sync_toggle'
        - $ref: '#/components/parameters/category'
        - name: status
          in: query
          description: The status of the profile. It can be multiple values with comma separated.
          required: false
          schema:
            type: string
            enum:
              - active
              - inactive
              - on leave
              - terminated
            example: active,on leave
      responses:
        '200':
          $ref: '#/components/responses/IscAccounts'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /isc/accounts/{id}:
    get:
      summary: Get Profile
      operationId: getSingleSchemaMappedProfile
      description: It returns a single stored profile, optionally with schema-mapped field names.
      tags:
        - isc accounts
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Profile'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update Profile
      operationId: updateProfile
      description: Updates a profile only through ISC schema-mapped attributes, performs a reverse mapping to match the NERM attributes to update.
      tags:
        - isc accounts
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/ProfileAccount'
      responses:
        '200':
          $ref: '#/components/responses/Profile'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /job_status:
    get:
      summary: Get bulk job status
      operationId: getJobStatus
      description: Retrieve the status of a bulk job
      tags:
        - job status
      parameters:
        - $ref: '#/components/parameters/job_id'
      responses:
        '200':
          $ref: '#/components/responses/Job'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /languages/{locale}:
    patch:
      summary: Update a language by locale
      operationId: patchLanguage
      description: Update a language by locale
      tags:
        - languages
      parameters:
        - $ref: '#/components/parameters/languages_locale'
      requestBody:
        $ref: '#/components/requestBodies/Language'
      responses:
        '200':
          $ref: '#/components/responses/Language'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /page_contents:
    get:
      summary: Get page contents data
      operationId: getPageContents
      description: This endpoint can retrieve page content data.
      tags:
        - page contents
      responses:
        '200':
          $ref: '#/components/responses/PageContent'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create a page content entry
      operationId: createPageContent
      description: This endpoint can create page content
      tags:
        - page contents
      requestBody:
        $ref: '#/components/requestBodies/PageContent'
      responses:
        '201':
          $ref: '#/components/responses/PageContent'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /page_contents/{id}:
    get:
      summary: Find page content record
      operationId: getPageContentById
      description: Info for a specific page content record
      tags:
        - page contents
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/PageContent'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update page content record
      operationId: updatePageContentById
      description: Update info for a specific page content record by id
      tags:
        - page contents
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/PageConent'
      responses:
        '200':
          $ref: '#/components/responses/PageContent'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete page content record
      operationId: deletePageContentById
      description: Delete page content by id
      tags:
        - page contents
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/PageContent'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /page_contents/{uid}:
    get:
      summary: Find a page content record
      operationId: getPageContentByUid
      description: Info for a specific page content record by UID (user-specified identifier)
      tags:
        - page contents
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/PageContent'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update page content record
      operationId: updatePageContentByUid
      description: Update info for a specific page content record by UID (user-specified identifier)
      tags:
        - page contents
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        $ref: '#/components/requestBodies/PageConent'
      responses:
        '200':
          $ref: '#/components/responses/PageContent'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete page content record
      operationId: deletePageContentByUid
      description: Delete page content by by UID (user-specified identifier)
      tags:
        - page contents
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/PageContent'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /page_content_translations:
    get:
      summary: Get page contents translation
      operationId: getPageContents
      description: This endpoint can retrieve page content translation data.
      tags:
        - page content translations
      responses:
        '200':
          $ref: '#/components/responses/PageContentTranslation'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create page content translation
      operationId: createPageContent
      description: Create a page content translation record.
      tags:
        - page content translations
      requestBody:
        $ref: '#/components/requestBodies/PageContentTranslation'
      responses:
        '201':
          $ref: '#/components/responses/PageContentTranslation'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /page_content_translations/{id}:
    get:
      summary: Find page content translation
      operationId: getPageContentTranslationById
      description: Info for a specific page content translation record by Id
      tags:
        - page content translations
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/PageContentTranslation'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update page content translation
      operationId: updatePageContentTranslationById
      description: Update info for a specific page content translation record by id
      tags:
        - page content translations
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/PageConentTranslation'
      responses:
        '200':
          $ref: '#/components/responses/PageContentTranslation'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete page content translation
      operationId: deletePageContentTranslationById
      description: Delete page content translation by id
      tags:
        - page content translations
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/PageContentTranslation'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /page_content_translations/{uid}:
    get:
      summary: Find page content translation
      operationId: getPageContentTranslationByUid
      description: Info for a specific page content translation record by UID (user-specified identifier)
      tags:
        - page content translations
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/PageContentTranslation'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update page content translation
      operationId: updatePageContentTranslationByUid
      description: Update info for a specific page content translation record by UID (user-specified identifier)
      tags:
        - page content translations
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        $ref: '#/components/requestBodies/PageConentTranslation'
      responses:
        '200':
          $ref: '#/components/responses/PageContentTranslation'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete page content translation
      operationId: deletePageContentTranslationByUid
      description: Delete page content translation by UID (user-specified identifier)
      tags:
        - page content translations
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/PageContentTranslation'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /pages/profile_pages:
    post:
      summary: Create a profile page
      operationId: createProfilePage
      description: Create a profile page
      tags:
        - pages
      requestBody:
        $ref: '#/components/requestBodies/ProfilePage'
      responses:
        '200':
          $ref: '#/components/responses/Pages'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /pages/workflow_pages:
    post:
      summary: Create a workflow page
      operationId: createWorkflowPage
      description: Create a workflow page
      tags:
        - pages
      requestBody:
        $ref: '#/components/requestBodies/WorkflowPage'
      responses:
        '200':
          $ref: '#/components/responses/Pages'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /page_elements:
    get:
      summary: Get page element data
      operationId: getPageElements
      description: Retrieves page elements data.
      tags:
        - page elements
      responses:
        '200':
          $ref: '#/components/responses/PageElement'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create a page element entry
      operationId: createPageElement
      description: Creates a page element.
      tags:
        - page elements
      requestBody:
        $ref: '#/components/requestBodies/PageElement'
      responses:
        '201':
          $ref: '#/components/responses/PageElement'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /page_elements/{id}:
    get:
      summary: Find a page element
      operationId: getPageElementById
      description: Info for a specific page element record
      tags:
        - page elements
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/PageElement'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update page element
      operationId: updatePageElementById
      description: Update info for a specific page element record by id
      tags:
        - page elements
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/PageElement-2'
      responses:
        '200':
          $ref: '#/components/responses/PageElement'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete page element
      operationId: deletePageElementById
      description: Delete page element by id
      tags:
        - page elements
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/PageElement'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /page_elements/{uid}:
    get:
      summary: Find page element
      operationId: getPageElementByUid
      description: Info for a specific page element record by UID (user-specified identifier)
      tags:
        - page elements
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/PageElement'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update page element
      operationId: updatePageElementByUid
      description: Update info for a specific page element record by UID (user-specified identifier)
      tags:
        - page elements
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        $ref: '#/components/requestBodies/PageElement-2'
      responses:
        '200':
          $ref: '#/components/responses/PageElement'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete page element
      operationId: deletePageElementByUid
      description: Delete page element by UID (user-specified identifier)
      tags:
        - page elements
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/PageElement'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /permissions:
    post:
      summary: Create a permission
      description: This endpoint can create permissions for Lifecycle, Consolidation, and Collaboration
      operationId: createPermission
      tags:
        - permissions
      requestBody:
        $ref: '#/components/requestBodies/Permissions'
      responses:
        '200':
          $ref: '#/components/responses/Permission'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profile:
    post:
      summary: Create a profile
      operationId: submitProfile
      description: Create a profile
      tags:
        - profiles
      requestBody:
        $ref: '#/components/requestBodies/Profile'
      responses:
        '200':
          $ref: '#/components/responses/Profile'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profiles:
    get:
      summary: Get profiles
      operationId: getProfiles
      description: Get profiles
      tags:
        - profiles
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/exclude_attributes'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/profile_type_id'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/metadata'
        - $ref: '#/components/parameters/after_id'
        - $ref: '#/components/parameters/updated_after'
      responses:
        '200':
          $ref: '#/components/responses/Profiles_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create multiple profiles
      operationId: createProfiles
      description: Create multiple profiles
      tags:
        - profiles
      requestBody:
        $ref: '#/components/requestBodies/Profiles'
      responses:
        '200':
          $ref: '#/components/responses/Profiles'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update multiple profiles
      operationId: patchProfiles
      description: Update multiple profiles
      tags:
        - profiles
      requestBody:
        $ref: '#/components/requestBodies/Profiles-3'
      responses:
        '200':
          $ref: '#/components/responses/Profiles'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete multiple profiles
      operationId: deleteProfiles
      description: Delete multiple profiles
      tags:
        - profiles
      requestBody:
        $ref: '#/components/requestBodies/Profiles-2'
      responses:
        '200':
          $ref: '#/components/responses/ProfilesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profiles/{id}:
    get:
      summary: Find profile by id
      operationId: getProfileById
      description: Find profile by id
      tags:
        - profiles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Profile'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a profile by id
      operationId: patchProfileById
      description: Update a profile by id
      tags:
        - profiles
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/Profile-2'
      responses:
        '200':
          $ref: '#/components/responses/Profile'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a single profile
      operationId: deleteProfileById
      description: Delete a single profile
      tags:
        - profiles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: The Profile was successfully deleted.
        '400':
          description: Error deleting Profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: A message describing the error that occurred
                    type: string
        '500':
          $ref: '#/components/responses/500'
  /profiles/{id}/upload/{attribute_id}:
    get:
      summary: Retrieves profile attribute attachment URL
      operationId: getProfileUpload
      description: Retrieves the URL of an attachment attribute value from a profile
      tags:
        - profiles
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/attribute_id'
      responses:
        '200':
          $ref: '#/components/responses/Url'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Uploads profile attachment attribute
      operationId: submitProfileUpload
      description: |
        Uploads a new attachment attribute value to a profile. The upload must be a FORM data type; this is not a JSON API. The upload must include the binary content of the payload under the 'file' named form element. The upload must not attempt to include the file name or its content type as a other form or JSON as parameters. The upload must not attempt to upload the file body as the POST body payload; it has to arrive as a FORM parameter. Do not use a `File/Binary` payload type for the POST operation in your API client.
      tags:
        - profiles
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/attribute_id'
      requestBody:
        $ref: '#/components/requestBodies/File'
      responses:
        '200':
          $ref: '#/components/responses/Url'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profiles/{id}/avatar:
    get:
      summary: Retrieves profile avatar URL
      operationId: getProfileAvatar
      description: Retrieves the URL of the profile avatar
      tags:
        - profiles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Url'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Uploads new profile avatar
      operationId: submitProfileAvatar
      description: Uploads a new profile avatar
      tags:
        - profiles
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/File'
      responses:
        '200':
          $ref: '#/components/responses/Url'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profile_type:
    post:
      summary: Create a profile type
      operationId: submitProfileType
      description: Create a profile type
      tags:
        - profile types
      requestBody:
        $ref: '#/components/requestBodies/ProfileType'
      responses:
        '200':
          $ref: '#/components/responses/ProfileType'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profile_types:
    get:
      summary: Get profile types
      operationId: getProfileTypes
      description: Get option based attribute values
      tags:
        - profile types
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/archived'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/ProfileTypes_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profile_types/{id}:
    get:
      summary: Find profile type
      operationId: getProfileTypeById
      description: Find profile type by id
      tags:
        - profile types
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/ProfileType'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a profile type
      operationId: patchProfileTypeById
      description: Update a profile type by id
      tags:
        - profile types
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/ProfileType-2'
      responses:
        '200':
          $ref: '#/components/responses/ProfileType'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete profile type
      operationId: deleteProfileTypeById
      description: Delete a profile type. All profiles of that type must first be destroyed before the profile type can be destroyed.
      tags:
        - profile types
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Info'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profile_types/{uid}:
    get:
      summary: Find profile type
      operationId: getProfileTypeByUid
      description: Find profile type by UID (user-specified identifier)
      tags:
        - profile types
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/ProfileType'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a profile type
      operationId: patchProfileTypeByUid
      description: Update a profile type by UID (user-specified identifier)
      tags:
        - profile types
      parameters:
        - $ref: '#/components/parameters/uid'
      requestBody:
        $ref: '#/components/requestBodies/ProfileType-2'
      responses:
        '200':
          $ref: '#/components/responses/ProfileType'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete profile type
      operationId: deleteProfileTypeByUid
      description: Delete a profile type by UID (user-specified identifier). All profiles of that type must first be destroyed before the profile type can be destroyed.
      tags:
        - profile types
      parameters:
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/Info'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profile_type_roles:
    post:
      summary: Create a profile type role
      description: This endpoint can create a profile type role. NOTE- The ability to toggle Allow/Block is done through the Profile Type
      operationId: createProfileTypeRole
      tags:
        - profile  type roles
      requestBody:
        $ref: '#/components/requestBodies/ProfileTypeRoles'
      responses:
        '200':
          $ref: '#/components/responses/ProfileTypeRoles'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profile_types/{profile_type_id}/ne_attributes:
    get:
      summary: profile_types/ne_attributes synced status
      operationId: getProfileTypeAttributes
      description: Get ne attributes and synced attribute relationship to profile type.
      tags:
        - synced attributes
      parameters:
        - $ref: '#/components/parameters/profile_type_id-2'
        - $ref: '#/components/parameters/synced_attribute_active_filter'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          $ref: '#/components/responses/ProfileTypeAttributes_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profile_types/{profile_type_id}/synced_attributes:
    post:
      summary: Create a synced attribute
      operationId: createSyncedAttribute
      description: Create synced attribute
      tags:
        - synced attributes
      requestBody:
        $ref: '#/components/requestBodies/SyncedAttributes'
      responses:
        '201':
          $ref: '#/components/responses/SyncedAttribute'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /profile_types/{profile_type_id}/synced_attributes/{ne_attribute_id}:
    delete:
      summary: Delete synced attribute
      operationId: deleteSyncedAttribute
      description: Delete a synced attribute.
      tags:
        - synced attributes
      parameters:
        - $ref: '#/components/parameters/profile_type_id-2'
        - $ref: '#/components/parameters/ne_attribute_id-2'
      responses:
        '200':
          $ref: '#/components/responses/Info'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /risk_levels:
    get:
      summary: Get risk level data
      operationId: getRiskLevels
      description: This endpoint can retrieve risk level data in bulk from Lifecycle
      tags:
        - risk levels
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/label'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/RiskLevels_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /risk_levels/{id}:
    get:
      summary: Find risk level data
      operationId: getRiskLevel
      description: Find risk level data by id
      tags:
        - risk levels
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/RiskLevel'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /risk_scores:
    get:
      summary: Get risk score data
      operationId: getRiskScores
      description: This endpoint can retrieve risk score data in bulk from Lifecycle
      tags:
        - risk scores
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/object_id'
        - $ref: '#/components/parameters/object_type'
        - $ref: '#/components/parameters/overall_risk_level_id'
        - $ref: '#/components/parameters/impact_risk_level_id'
        - $ref: '#/components/parameters/probability_risk_level_id'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/RiskScores'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /risk_scores/{id}:
    get:
      summary: Find risk score data
      operationId: getRiskScore
      description: Find risk score data by id
      tags:
        - risk scores
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/RiskScore'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /roles:
    get:
      summary: Get roles
      operationId: getRoles
      description: This endpoint can retrieve roles from NERM. Optionally you can provide parameters to filter results.
      tags:
        - roles
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/Roles_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create multiple new roles
      operationId: submitRoles
      description: Create multiple new users
      tags:
        - roles
      requestBody:
        $ref: '#/components/requestBodies/Roles'
      responses:
        '200':
          $ref: '#/components/responses/RolesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update multiple roles
      operationId: patchRoles
      description: Update multiple users
      tags:
        - roles
      requestBody:
        $ref: '#/components/requestBodies/Roles-2'
      responses:
        '200':
          $ref: '#/components/responses/RolesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /role:
    post:
      summary: Create a new role
      operationId: submitRole
      description: Create a new role
      tags:
        - roles
      requestBody:
        $ref: '#/components/requestBodies/Role'
      responses:
        '200':
          $ref: '#/components/responses/Role'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /roles/{id}:
    get:
      summary: Find role by id
      operationId: getRole
      description: Info for a specific user role
      tags:
        - roles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Role'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update an existing role
      operationId: patchRole
      description: Update an existing role
      tags:
        - roles
      requestBody:
        $ref: '#/components/requestBodies/Role-2'
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Role'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /role_profile:
    post:
      summary: Create a role-profile contributor relationship
      operationId: submitRoleProfile
      description: Create a role-profile contributor relationship
      tags:
        - role profiles
      requestBody:
        $ref: '#/components/requestBodies/RoleProfile'
      responses:
        '200':
          $ref: '#/components/responses/RoleProfile'
        '405':
          $ref: '#/components/responses/InvalidInput'
  /role_profiles:
    get:
      summary: Get role-profile contributor relationships
      operationId: getRoleProfiles
      description: Get role-profile contributor relationships
      tags:
        - role profiles
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/role_id'
        - $ref: '#/components/parameters/profile_id'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/RoleProfiles_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create multiple role-profile contributor relationships
      operationId: submitRoleProfiles
      description: Create multiple role-profile contributor relationships
      tags:
        - role profiles
      requestBody:
        $ref: '#/components/requestBodies/RoleProfiles'
      responses:
        '200':
          $ref: '#/components/responses/RoleProfilesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update multiple role-profile contributor relationships
      operationId: patchRoleProfiles
      description: Update multiple role-profile contributor relationships
      tags:
        - role profiles
      requestBody:
        $ref: '#/components/requestBodies/RoleProfiles-2'
      responses:
        '200':
          $ref: '#/components/responses/RoleProfilesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /role_profiles/{id}:
    get:
      summary: Find role-profile contributor relationship
      operationId: getRoleProfile
      description: Find role-profile contributor relationship by id
      tags:
        - role profiles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/RoleProfile'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a role-profile contributor relationship
      operationId: patchRoleProfile
      description: Update a role-profile contributor relationship by id
      tags:
        - role profiles
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/RoleProfile'
      responses:
        '200':
          $ref: '#/components/responses/RoleProfile'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /role_profile/{id}:
    delete:
      summary: Delete a role profile assignment
      operationId: deleteRoleProfile
      description: Delete a role profile assignment
      tags:
        - role profiles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Role profile was destroyed
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /system_roles:
    get:
      summary: Get system roles
      operationId: getSystemRoles
      description: This endpoint can retrieve system roles from NERM. Optionally you can provide parameters to filter results.
      tags:
        - system roles
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/System_Roles_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /system_role_permissions:
    post:
      summary: Create a system role permission
      description: This endpoint can create system role permissions for Lifecycle System Roles
      operationId: createSystemRolePermission
      tags:
        - system role permissions
      requestBody:
        $ref: '#/components/requestBodies/SystemRolePermissions'
      responses:
        '200':
          $ref: '#/components/responses/SystemRolePermission'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user:
    post:
      summary: Create a new user
      operationId: submitUser
      description: Create a new user
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '200':
          $ref: '#/components/responses/User'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /users:
    get:
      summary: Get users
      operationId: getUsers
      description: This endpoint can retrieve users from Lifecycle or you can search for users using parameters
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/login'
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/user_status'
        - $ref: '#/components/parameters/user_type'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/metadata'
        - $ref: '#/components/parameters/sailpoint_identity_id'
      responses:
        '200':
          $ref: '#/components/responses/Users_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create multiple new users
      operationId: submitUsers
      description: Create multiple new users
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Users'
      responses:
        '200':
          $ref: '#/components/responses/UsersJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update multiple users
      operationId: patchUsers
      description: Update multiple users
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Users-2'
      responses:
        '200':
          $ref: '#/components/responses/UsersJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /users/{id}:
    get:
      summary: Find user by id
      operationId: getUser
      description: Info for a specific user
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/User'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a user by id
      operationId: patchUser
      description: Update a user by id
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/User-2'
      responses:
        '200':
          $ref: '#/components/responses/User'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete a user
      operationId: deleteUser
      description: Delete a user
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Info'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /users/{id}/avatar:
    get:
      summary: Retrieves  URL user avatar
      operationId: getUserAvatar
      description: Retrieves the URL of the user avatar
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Url'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Uploads new user avatar
      operationId: submitUserAvatar
      description: Uploads a new user avatar
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/File'
      responses:
        '200':
          $ref: '#/components/responses/Url'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_manager:
    post:
      summary: Create a new user-manager relationship
      operationId: submitUserManager
      description: Create a new user-manager relationship
      tags:
        - user managers
      requestBody:
        $ref: '#/components/requestBodies/UserManager'
      responses:
        '200':
          $ref: '#/components/responses/UserManager'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_managers:
    get:
      summary: Get user-manager relationships
      operationId: getUserManagers
      description: This endpoint can retrieve user-manager relationships from Lifecycle or you can search for user-manager relationships using parameters
      tags:
        - user managers
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/manager_id'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/UserManagers_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create multiple new user-manager relationships
      operationId: submitUserManagers
      description: Create multiple new user-manager relationships
      tags:
        - user managers
      requestBody:
        $ref: '#/components/requestBodies/UserManagers'
      responses:
        '200':
          $ref: '#/components/responses/UserManagersJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update multiple user-manager relationships
      operationId: patchUserManagers
      description: Update multiple user-manager relationships
      tags:
        - user managers
      requestBody:
        $ref: '#/components/requestBodies/UserManagers-2'
      responses:
        '200':
          $ref: '#/components/responses/UserManagersJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_managers/{id}:
    get:
      summary: Find user-manager relationship
      operationId: getUserManager
      description: Info for a specific user-manager relationship
      tags:
        - user managers
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/UserManager'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a user-manager relationship
      operationId: patchUserManager
      description: Update a user-manager relationship by id
      tags:
        - user managers
      requestBody:
        $ref: '#/components/requestBodies/UserManager'
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/UserManager'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_profile:
    post:
      summary: Create a user-profile contributor relationship
      operationId: submitUserProfile
      description: Create a user-profile contributor relationship
      tags:
        - user profiles
      requestBody:
        $ref: '#/components/requestBodies/UserProfile'
      responses:
        '200':
          $ref: '#/components/responses/UserProfile'
        '405':
          $ref: '#/components/responses/InvalidInput'
  /user_profiles:
    get:
      summary: Get user-profile contributor relationships
      operationId: getUserProfiles
      description: Get user-profile contributor relationships
      tags:
        - user profiles
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/ne_attribute_id'
        - $ref: '#/components/parameters/profile_id'
        - $ref: '#/components/parameters/relationship_type'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/UserProfiles_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create multiple user-profile contributor relationships
      operationId: createUserProfiles
      description: Create multiple user-profile contributor relationships
      tags:
        - user profiles
      requestBody:
        $ref: '#/components/requestBodies/UserProfiles'
      responses:
        '200':
          $ref: '#/components/responses/UserProfilesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update multiple user-profile contributor relationships
      operationId: patchUserProfiles
      description: Update multiple user-profile contributor relationships
      tags:
        - user profiles
      requestBody:
        $ref: '#/components/requestBodies/UserProfiles-3'
      responses:
        '200':
          $ref: '#/components/responses/UserProfilesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete multiple user-profile contributor relationships
      operationId: deleteUserProfiles
      description: Delete multiple user-profile contributor relationships
      tags:
        - user profiles
      requestBody:
        $ref: '#/components/requestBodies/UserProfiles-2'
      responses:
        '200':
          $ref: '#/components/responses/UserProfilesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_profiles/{id}:
    get:
      summary: Find user-profile contributor relationship
      operationId: getUserProfile
      description: Find user-profile contributor relationship by id
      tags:
        - user profiles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/UserProfile'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a user-profile contributor relationship
      operationId: patchUserProfile
      description: Update a user-profile contributor relationship by id
      tags:
        - user profiles
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/UserProfile'
      responses:
        '200':
          $ref: '#/components/responses/UserProfile'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_profile/{id}:
    delete:
      summary: Delete a user profile assignment
      operationId: deleteUserProfile
      description: Delete a user profile assignment
      tags:
        - user profiles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: User profile was destroyed
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_role:
    post:
      summary: Assign new role to user
      operationId: submitUserRole
      description: Assign a new role to a user
      tags:
        - user roles
      requestBody:
        $ref: '#/components/requestBodies/UserRole'
      responses:
        '200':
          $ref: '#/components/responses/UserRole'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_roles:
    get:
      summary: Get user role pairings
      operationId: getUserRoles
      description: This endpoint can retrieve user role pairings from Lifecycle or you can search for user role pairings using parameters
      tags:
        - user roles
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/role_id'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/UserRoles_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create new user role pairings
      operationId: submitUserRoles
      description: Create multiple new user role pairings
      tags:
        - user roles
      requestBody:
        $ref: '#/components/requestBodies/UserRoles'
      responses:
        '200':
          $ref: '#/components/responses/UserRolesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update multiple user role pairings
      operationId: patchUserRoles
      description: Update multiple user role pairings
      tags:
        - user roles
      requestBody:
        $ref: '#/components/requestBodies/UserRoles-2'
      responses:
        '200':
          $ref: '#/components/responses/UserRolesJob'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_roles/{id}:
    get:
      summary: Find user role pairing
      operationId: getUserRole
      description: Info for a specific user role pairing
      tags:
        - user roles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/UserRole'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a user role pairing
      operationId: patchUserRole
      description: Update a user role pairing by id
      tags:
        - user roles
      requestBody:
        $ref: '#/components/requestBodies/UserRole'
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/UserRole'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user_role/{id}:
    delete:
      summary: Delete a user role assignment
      operationId: deleteUserRole
      description: Delete a user role assignment
      tags:
        - user roles
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: User role was destroyed
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflows/create_workflows:
    post:
      summary: Create a create workflow
      operationId: createCreateWorkflow
      description: Create a create workflow
      tags:
        - workflows
      requestBody:
        $ref: '#/components/requestBodies/CreateWorkflow'
      responses:
        '200':
          $ref: '#/components/responses/Workflow'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflows/update_workflows:
    post:
      summary: Create an update workflow
      operationId: createUpdateWorkflow
      description: Create an update workflow
      tags:
        - workflows
      requestBody:
        $ref: '#/components/requestBodies/UpdateWorkflow'
      responses:
        '200':
          $ref: '#/components/responses/Workflow'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflows/batch_workflows:
    post:
      summary: Create a batch workflow
      operationId: createBatchWorkflow
      description: Create a batch workflow
      tags:
        - workflows
      requestBody:
        $ref: '#/components/requestBodies/BatchWorkflow'
      responses:
        '200':
          $ref: '#/components/responses/Workflow'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflows/automated_workflows:
    post:
      summary: Create an automated workflow
      operationId: createAutomatedWorkflow
      description: Create an automated workflow
      tags:
        - workflows
      requestBody:
        $ref: '#/components/requestBodies/AutomatedWorkflow'
      responses:
        '200':
          $ref: '#/components/responses/Workflow'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflows/registration_workflows:
    post:
      summary: Create a registration workflow
      operationId: createRegistrationWorkflow
      description: Create a registration workflow
      tags:
        - workflows
      requestBody:
        $ref: '#/components/requestBodies/CreateWorkflow'
      responses:
        '200':
          $ref: '#/components/responses/Workflow'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflows/login_workflows:
    post:
      summary: Create a login workflow
      operationId: createLoginWorkflow
      description: Create a login workflow
      tags:
        - workflows
      requestBody:
        $ref: '#/components/requestBodies/LoginWorkflow'
      responses:
        '200':
          $ref: '#/components/responses/Workflow'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflows/password_reset_workflows:
    post:
      summary: Create a password reset workflow
      operationId: createPasswordUpdateWorkflow
      description: Create a password reset workflow
      tags:
        - workflows
      requestBody:
        $ref: '#/components/requestBodies/LoginWorkflow'
      responses:
        '200':
          $ref: '#/components/responses/Workflow'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/approval_actions:
    post:
      summary: Create an approval action
      operationId: createApprovalAction
      description: Create an approval action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - workflow_action_performers, workflow_action_roles, workflow_action_performer_notification_email, workflow_action_approval_email, workflow_action_rejection_email. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/ApprovalAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/ask_security_question_actions:
    post:
      summary: Create ask security question action
      operationId: createAskSecurityQuestionAction
      description: Create an ask security question action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/AskSecurityQuestionAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/auto_assign_actions:
    post:
      summary: Create an auto assign action
      operationId: createAutoAssignAction
      description: Create an auto assign action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - workflow_action_roles. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/AutoAssignAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/batch_update_actions:
    post:
      summary: Create a batch update action
      operationId: createBatchUpdateAction
      description: Create a batch update action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/BatchUpdateAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/close_session_actions:
    post:
      summary: Create a close session action
      operationId: createCloseSessionAction
      description: Create a close session action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/CloseSessionAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/contributors_actions:
    post:
      summary: Create a contributors action
      operationId: createContributorsAction
      description: Create a contributors action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - workflow_action_performers, workflow_action_roles, workflow_action_performer_notification_email. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/ContributorsAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/create_profile_actions:
    post:
      summary: Create a create profile action
      operationId: createCreateProfileAction
      description: Create a create profile action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/CreateProfileAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/duplicate_prevention_actions:
    post:
      summary: Create a duplicate prevention action
      operationId: createDuplicatePreventionAction
      description: Create a duplicate prevention action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - duplicatation_prevention_attributes, workflow_action_performers, workflow_action_roles, workflow_action_performer_notification_email. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/DuplicatePreventionAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/email_verification_actions:
    post:
      summary: Create an email verification action
      operationId: createEmailVerificationAction
      description: Create an email verification action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/EmailVerificationAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/fulfillment_actions:
    post:
      summary: Create a fulfillment action
      operationId: createFulfillmentAction
      description: Create a fulfillment action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - workflow_action_performers, workflow_action_roles, workflow_action_performer_notification_email. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/FulfillmentAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/identity_proofing_actions:
    post:
      summary: Create an identity proofing action
      operationId: createIdentityProofingAction
      description: Create an identity proofing action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - identity_proofing_action_configuration, identity_proofing_action_mappings. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/IdentityProofingAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/invitation_actions:
    post:
      summary: Create an invitation action
      operationId: createInvitationAction
      description: Create an invitation action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - workflow_action_pause_action. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/InvitationAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/ldap_actions:
    post:
      summary: Create a ldap action
      operationId: createLdapAction
      description: Create a ldap action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - workflow_action_performers, workflow_action_roles. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/LdapAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/notification_actions:
    post:
      summary: Create a notification action
      operationId: createNotificationAction
      description: Create a notification action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/NotificationAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/password_reset_actions:
    post:
      summary: Create a password reset action
      operationId: createPasswordResetAction
      description: Create a password reset action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/PasswordResetAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/profile_check_actions:
    post:
      summary: Create a profile check action
      operationId: createProfileCheckAction
      description: Create a profile check action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/ProfileCheckAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/profile_select_actions:
    post:
      summary: Create a profile select action
      operationId: createProfileSelectAction
      description: Create a profile select action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/ProfileSelectAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/request_actions:
    post:
      summary: Create a request action
      operationId: createRequestAction
      description: Create a request action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/RequestAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/rest_api_actions:
    post:
      summary: Create a REST API action
      operationId: createRestApiAction
      description: Create a REST API action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - rest_api_action_configuration, api_configuration_attributes. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/RestApiAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/review_actions:
    post:
      summary: Create a review action
      operationId: createReviewAction
      description: Create a review action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - workflow_action_performer_notification_email. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/ReviewAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/run_workflow_actions:
    post:
      summary: Create a run workflow action
      operationId: createRunWorkflowAction
      description: Create a run workflow action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - configuration_profile_attribute. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/RunWorkflowAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/set_attributes_actions:
    post:
      summary: Create a set attributes action
      operationId: createSetAttributesAction
      description: Create a set attributes action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - workflow_action_set_attributes. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/SetAttributesAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/set_security_question_actions:
    post:
      summary: Create set security question action
      operationId: createSetSecurityQuestionAction
      description: Create a set security question action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/SetSecurityQuestionAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/soap_api_actions:
    post:
      summary: Create a SOAP API action
      operationId: createSoapApiAction
      description: Create a SOAP API action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - soap_api_action_configuration, api_configuration_attributes. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/SoapApiAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/status_change_actions:
    post:
      summary: Create a status change action
      operationId: createStatusChangeAction
      description: Create a status change action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/StatusChangeAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/unassign_actions:
    post:
      summary: Create an unassign action
      operationId: createUnassignAction
      description: Create an unassign action. The following supporting objects will need to be created after this action is created (which are tied together via workflow_action_id) - workflow_action_roles. These supporting objects must be created for this action to be complete (APIs for these supporting objects not yet implemented, use UI).
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/UnassignAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/update_profile_actions:
    post:
      summary: Create an update profile action
      operationId: createUpdateProfileAction
      description: Create an update profile action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/UpdateProfileAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions/username_password_actions:
    post:
      summary: Create a username password action
      operationId: createUsernamePasswordAction
      description: Create a username password action
      tags:
        - workflow actions
      requestBody:
        $ref: '#/components/requestBodies/UsernamePasswordAction'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowAction'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_actions:
    get:
      summary: Get Workflow Actions
      operationId: getWorkflowActions
      description: This endpoint can retrieve workflow actions
      tags:
        - workflow actions
      parameters:
        - $ref: '#/components/parameters/workflow_id'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowActions'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_action_performers:
    post:
      summary: Create a workflow action performer
      operationId: createWorkflowActionPerformer
      description: Create a workflow action performer for an existing workflow action
      tags:
        - workflow action performer
      requestBody:
        $ref: '#/components/requestBodies/WorkflowActionPerformers'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowActionPerformers'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_sessions:
    get:
      summary: Get workflow sessions
      operationId: getWorkflowSessions
      description: Get workflow sessions
      tags:
        - workflow sessions
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/profile_id'
        - $ref: '#/components/parameters/uid-2'
        - $ref: '#/components/parameters/workflow_id'
        - $ref: '#/components/parameters/requester_id'
        - $ref: '#/components/parameters/workflow_session_status'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowSessions_Meta'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create a workflow session
      operationId: submitWorkflowSession
      description: Create a workflow session
      tags:
        - workflow sessions
      parameters:
        - $ref: '#/components/parameters/run'
      requestBody:
        $ref: '#/components/requestBodies/WorkflowSession'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowSession'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_sessions/{id}:
    get:
      summary: Find workflow session
      operationId: getWorkflowSession
      description: Find workflow session by id
      tags:
        - workflow sessions
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowSession'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update a workflow session
      operationId: patchWorkflowSession
      description: Update a workflow session by id
      tags:
        - workflow sessions
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/run'
      requestBody:
        $ref: '#/components/requestBodies/WorkflowSession-2'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowSession'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /workflow_sessions/{id}/upload/{attribute_id}:
    get:
      summary: Retrieves workflow session attachment URL
      operationId: getWorkflowSessionUpload
      description: Retrieves the URL of an attachment attribute value from a workflow session
      tags:
        - workflow sessions
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/attribute_id'
      responses:
        '200':
          $ref: '#/components/responses/Url'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Uploads workflow session attachment
      operationId: submitWorkflowSessionUpload
      description: |
        Uploads a new attachment attribute value to a workflow session. The upload must be a FORM data type; this is not a JSON API. The upload must include the binary content of the payload under the 'file' named form element. The upload must not attempt to include the file name or its content type as a other form or JSON as parameters. The upload must not attempt to upload the file body as the POST body payload; it has to arrive as a FORM parameter. Do not use a `File/Binary` payload type for the POST operation in your API client.
      tags:
        - workflow sessions
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/attribute_id'
      requestBody:
        $ref: '#/components/requestBodies/File'
      responses:
        '200':
          $ref: '#/components/responses/Url'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Token token=your token
  parameters:
    query:
      name: query
      in: query
      description: Allows for pagination and sorting.
      required: false
      schema:
        type: object
        properties:
          limit:
            type: integer
            example: 100
          offset:
            type: integer
            example: 50
          order:
            type: string
            example: created_at
        example:
          limit: 100
          offset: 50
          order: created_at
      style: deepObject
      explode: true
    label:
      name: label
      in: query
      description: The attribute label to filter by
      required: false
      schema:
        type: string
        example: birthday
    data_type:
      name: data_type
      in: query
      description: The attribute data type to filter by
      required: false
      schema:
        type: string
        enum:
          - text field
          - text area
          - drop-down
          - radio buttons
          - check boxes
          - date
          - tags
          - attachment
          - profile select
          - profile search
          - owner select
          - owner search
          - contributor select
          - contributor search
        example: text field
    metadata:
      name: metadata
      in: query
      description: Returns batching metadata in the response. This includes `total` as the total quantity, `next` as the path of the following query url, `limit` and `after_id` (if requested) with the next following id (null if it is the last "page").
      required: false
      schema:
        type: boolean
        default: false
        example: true
    id:
      name: id
      in: path
      description: ID of the object to retrieve, update, or delete
      required: true
      schema:
        type: string
        format: uuid
        example: 1246d8b3-ac29-4015-8154-dea4434a73fa
    uid:
      name: uid
      in: path
      description: UID of the object to retrieve, update, or delete.  A UID or "specified identifier" is a string typically in "snake_case" format that provides a human-readable description of the record.  They are commonly used to ensure sandbox, qa, staging and production tenants have the identical configuration items loaded.  Every record has a UID assigned when persisted. When not specified the system assigns one by default.  A default value looks like a 32 character string of random hexadecimal characters.
      required: false
      schema:
        type: string
        format: snake_case
        example: middle_initial_attribute
    ne_attribute_id:
      name: ne_attribute_id
      in: query
      description: ID of an attribute for filtering
      required: false
      schema:
        type: string
        format: uuid
        example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
    delegate_id:
      name: delegate_id
      in: query
      description: Filter by delegate ID
      required: false
      schema:
        type: string
        default: false
        example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
    delegator_id:
      name: delegator_id
      in: query
      description: Filter by delegator ID
      required: false
      schema:
        type: string
        default: false
        example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
    expired:
      name: expired
      in: query
      description: Filter by expiration status (true for expired, false for not expired)
      required: false
      schema:
        type: boolean
        default: false
        example: true
    limit:
      name: limit
      in: query
      description: The maximum number of items to return.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        example: 5
    offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        example: 5
    profile_id:
      name: profile_id
      in: query
      description: Profile ID to filter by
      required: false
      schema:
        type: string
        format: uuid
        example: 4e480441-451d-47d9-87c2-9a0f0fe135eb
    workflow_session_id:
      name: workflow_session_id
      in: query
      description: Workflow Session ID to filter by
      required: false
      schema:
        type: string
        format: uuid
        example: c5e1dd38-7e29-464f-a0da-0c0d886d022a
    result:
      name: result
      in: query
      description: ID Proofing Result to filter by
      required: false
      schema:
        type: string
        enum:
          - pass
          - fail
        example: pass
    use_schema:
      name: use_schema
      in: query
      description: The use_schema parameter returns schema-mapped field names in the Profiles API response when set to true.
      required: false
      schema:
        type: boolean
        default: false
        example: true
    override_sync_toggle:
      name: override_sync_toggle
      in: query
      description: The override_sync_toggle parameter returns all non-employee and assignment profiles regardless of the sync status when set to true.
      required: false
      schema:
        type: boolean
        default: false
        example: true
    category:
      name: category
      in: query
      description: Filters profiles by profile type category
      required: false
      schema:
        type: string
        enum:
          - non-employee
          - assignment
        example: non-employee
    job_id:
      name: job_id
      in: query
      description: The id of the job returned from a POST or PATCH endpoint that resulted in a job being created
      required: true
      schema:
        type: string
        example: c5e1dd38-7e29-464f-a0da-0c0d886d022a
    languages_locale:
      name: language_locale
      in: path
      description: Language locale of the object
      required: true
      schema:
        type: string
        format: string
        example: es
    exclude_attributes:
      name: exclude_attributes
      in: query
      description: Allows for optimization by not returning the associated attribute data for the returned profiles
      required: false
      schema:
        type: boolean
        default: false
        example: false
    name:
      name: name
      in: query
      description: object name for filtering
      required: false
      schema:
        type: string
        example: name
    profile_type_id:
      name: profile_type_id
      in: query
      description: Profile Type ID for filtering
      required: false
      schema:
        type: string
        format: uuid
        example: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
    status:
      name: status
      in: query
      description: status value for filtering
      required: false
      schema:
        type: string
        enum:
          - Active
          - Inactive
          - On Leave
          - Terminated
        example: Active
    after_id:
      name: after_id
      in: query
      description: Represents the ID where the query should begin from. If blank, it represents the first ID. When used, forces sorting by ID ascending and does not allow use of `offset`. When `after_id` is specified it changes the mode of the API such that any filter parameters other than `profile_type_id`, `limit`, and `offset` are not supported and will be either silently ignored or result in an HTTP 400 error. For example you can not include an `after_id` along with an `archived=false` in the same request. Can be used alongside `metadata` parameter.
      required: false
      schema:
        type: string
        format: uuid
        example: 4eaa719f-4312-4c5b-9264-d0eb04d4a02a
    updated_after:
      name: updated_after
      in: query
      description: Adds support for filtering profiles based on the date of the latest modification made on them. Can be used alongside the after_id parameter.
      required: false
      schema:
        type: string
        format: date
        example: '2025-05-05'
    attribute_id:
      name: attribute_id
      in: path
      description: The id of the attachment attribute
      required: true
      schema:
        type: string
        format: uuid
        example: 1246d8b3-ac29-4015-8154-dea4434a73fa
    archived:
      name: archived
      in: query
      description: Filter by archive status
      required: false
      schema:
        type: boolean
        default: false
        example: false
    profile_type_id-2:
      name: profile_type_id
      in: path
      description: Profile type ID of the object
      required: true
      schema:
        type: string
        format: uuid
        example: 1246d8b3-ac29-4015-8154-dea4434a73fa
    synced_attribute_active_filter:
      name: active_filter
      in: query
      description: Filter for profile type synced attributes
      required: false
      schema:
        type: string
        enum:
          - synced
          - unsynced
          - all
        example: all
    search:
      name: search
      in: query
      description: Filter by string
      required: false
      schema:
        type: string
        example: search
    page:
      name: page
      in: query
      description: Pagination page number
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        example: 5
    per_page:
      name: page
      in: query
      description: Pagination items per page
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        example: 5
    sort:
      name: sort
      in: query
      description: How records should be sorted
      required: false
      schema:
        type: object
        example:
          attr: sync
          order: asc
        properties:
          attr:
            type: string
            example: sync
          order:
            type: string
            enum:
              - asc
              - desc
            example: asc
    ne_attribute_id-2:
      name: ne_attribute_id
      in: path
      description: Ne attribute ID of the object
      required: true
      schema:
        type: string
        format: uuid
        example: 1246d8b3-ac29-4015-8154-dea4434a73fa
    object_id:
      name: object_id
      in: query
      description: ID of an object for filtering. Used along with object_type
      required: false
      schema:
        type: string
        format: uuid
        example: c5e1dd38-7e29-464f-a0da-0c0d886d022a
    object_type:
      name: object_type
      in: query
      description: Type of object that object_id represents
      required: false
      schema:
        type: string
        enum:
          - Profile
          - WorkflowSession
        example: Profile
    overall_risk_level_id:
      name: overall_risk_level_id
      in: query
      description: Overall risk level to filter by
      required: false
      schema:
        type: string
        format: uuid
        example: c5e1dd38-7e29-464f-a0da-0c0d886d022a
    impact_risk_level_id:
      name: impact_risk_level_id
      in: query
      description: Impact risk level to filter by
      required: false
      schema:
        type: string
        format: uuid
        example: c5e1dd38-7e29-464f-a0da-0c0d886d022a
    probability_risk_level_id:
      name: probability_risk_level_id
      in: query
      description: Probability risk level to filter by
      required: false
      schema:
        type: string
        format: uuid
        example: c5e1dd38-7e29-464f-a0da-0c0d886d022a
    role_id:
      name: role_id
      in: query
      description: The ID of a role for filtering
      required: false
      schema:
        type: string
        format: uuid
        example: c5e1dd38-7e29-464f-a0da-0c0d886d022a
    login:
      name: login
      in: query
      description: The user login to search by
      required: false
      schema:
        type: string
        example: jane.doe
    title:
      name: title
      in: query
      description: The user title to search by
      required: false
      schema:
        type: string
        example: Marketing Director
    user_status:
      name: user_status
      in: query
      description: user status value for filtering
      required: false
      schema:
        type: string
        enum:
          - Active
          - Pending
          - Disabled
        example: Active
    user_type:
      name: type
      in: query
      description: user type
      required: false
      schema:
        type: string
        enum:
          - NeprofileUser
          - NeaccessUser
        example: NeprofileUser
    email:
      name: email
      in: query
      description: The user email to search by
      required: false
      schema:
        type: string
        format: email
        example: support@sailpoint.com
    sailpoint_identity_id:
      name: sailpoint_identity_id
      in: query
      description: SailPoint identity ID
      required: false
      schema:
        type: string
        example: 9496f8d6ddab49c0bef1e9ee6f1b835a
    user_id:
      name: user_id
      in: query
      description: The ID of a user for filtering
      required: false
      schema:
        type: string
        format: uuid
        example: bba9cfb2-96c1-4acb-ac79-a21732527265
    manager_id:
      name: manager_id
      in: query
      description: The ID of a user for filtering
      required: false
      schema:
        type: string
        format: uuid
        example: c5e1dd38-7e29-464f-a0da-0c0d886d022a
    relationship_type:
      name: relationship_type
      in: query
      description: Type of user contributor relationship to filter by
      required: false
      schema:
        type: string
        enum:
          - owner
          - contributor
        example: contributor
    workflow_id:
      name: workflow_id
      in: query
      description: Workflow ID for filtering
      required: false
      schema:
        type: string
        format: uuid
        example: bba9cfb2-96c1-4acb-ac79-a21732527265
    uid-2:
      name: uid
      in: query
      description: Workflow session user-specified identifier (UID) for filtering
      required: false
      schema:
        type: string
        minLength: 32
        maxLength: 32
        example: some_workflow_session_123
    requester_id:
      name: requester_id
      in: query
      description: Requester ID for filtering
      required: false
      schema:
        type: string
        format: uuid
        example: c5e1dd38-7e29-464f-a0da-0c0d886d022a
    workflow_session_status:
      name: status
      in: query
      description: filter by workflow session status
      required: false
      schema:
        type: string
        enum:
          - waiting on workflow
          - identity proofing completed
          - new
          - closing
          - pending request
          - requested
          - pending approval
          - approved
          - pending notification
          - notified
          - pending review
          - reviewed
          - pending trigger
          - stored procedure
          - pending status change
          - status changed
          - pending update
          - non employee updated
          - non employee created
          - pending creation
          - rejected
          - pending assignment
          - assigned
          - default
          - failed
          - un assigned
          - auto assigned
          - ldap provided
          - pending ldap
          - pending fulfillment
          - pending stored procedure
          - pending courion add
          - fulfilled
          - pending courion update
          - courion add
          - pending courion_extend
          - courion update
          - pending courion terminate
          - courion extend
          - pending profile select
          - courion terminate
          - batch completed
          - profiles selected
          - answered questions
          - pending questions
          - attempting to start workflow
          - started workflow
          - profile check complete
          - completed
          - processing
          - pending set attribute
          - invitation sent
          - action skipped
          - api request sent
          - attribute set
          - disabled
          - duplicates resolved
          - soap request sent
          - checking for duplicates
          - pending identity proofing
          - closed
          - workflow changed
        example: pending approval
    run:
      name: run
      in: query
      description: Will run the created/updated workflow session if successful
      required: false
      schema:
        type: boolean
        default: false
        example: false
  schemas:
    AttributeProperties:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the attribute
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
          description: The user-specified identifier of the attribute
          example: myattribute
        label:
          type: string
          description: The label for the attribute
          example: birthday
        description:
          type: string
          description: A description of the attribute
          example: Your birthday
        tool_tip:
          type: string
          description: The helper text that accompanies the attribute
          example: Put your birthday here mm-dd-yyyy
        crypt:
          type: boolean
          description: Whether or not the attribute is encrypted
          example: false
        archived:
          type: boolean
          description: Whether the attribute is archived
          example: false
        archived_on:
          type: string
          format: date-time
          readOnly: true
          description: When the attribute was archived
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: When the attribute was created
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: When the attribute was last updated
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
        date_format:
          type: string
          enum:
            - mm/dd/yyyy
            - mm-dd-yyyy
            - dd/mm/yyyy
            - dd-mm-yyyy
            - yyyy/mm/dd
            - yyyy-mm-dd
          description: The format of the date input if it is a date input
          example: mm/dd/yyyy
        selectable_status:
          type: string
          description: The status of the profiles that can be selected
          example: Active
        risk_score_setting:
          type: string
          description: What setting is used for the risk score
          example: standard
        risk_type:
          type: string
          description: Type of risk that applies to the attribute
          example: OverallRisk
        ownership_driven:
          type: boolean
          description: Only shows profiles that the user currently has access to, to be selected
          example: true
        allow_multiple_selections:
          type: boolean
          description: Whether or not multiple selections can be made on something like a contributor search.
          example: true
        filtered_by_ne_attribute:
          type: boolean
          description: Whether or not the attribute is filtered by another attribute
          example: true
        filtering_ne_attribute_id:
          type: string
          format: uuid
          description: The ID of the filtering attribute
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        ne_attribute_filter_id:
          type: string
          format: uuid
          description: The ID of the attribute filter
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        reverse_association_attribute_id:
          type: string
          format: uuid
          description: The ID of the attribute used with reverse association
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        profile_type_id:
          type: string
          format: uuid
          description: The ID of the profile type the attribute applies to
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        legacy_id:
          type: string
          format: uuid
          description: The legacy ID
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        tmp_created_at:
          type: string
          format: date-time
          readOnly: true
          description: the temp of when attribute was created
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
        tmp_updated_at:
          type: string
          format: date-time
          readOnly: true
          description: the temp of when attribute was last updated
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
    Attribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the attribute
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
          description: The user-specified identifier of the attribute
          example: myattribute
        label:
          type: string
          description: The label for the attribute
          example: birthday
        description:
          type: string
          description: A description of the attribute
          example: Your birthday
        tool_tip:
          type: string
          description: The helper text that accompanies the attribute
          example: Put your birthday here mm-dd-yyyy
        crypt:
          type: boolean
          description: Whether the attribute is encrypted
          example: false
        archived:
          type: boolean
          description: Whether the attribute is archived
          example: false
        archived_on:
          type: string
          format: date-time
          description: When the attribute was archived
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
        created_at:
          type: string
          format: date-time
          description: When the attribute was created
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
        updated_at:
          type: string
          format: date-time
          description: When the attribute was updated
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
        date_format:
          type: string
          enum:
            - mm/dd/yyyy
            - mm-dd-yyyy
            - dd/mm/yyyy
            - dd-mm-yyyy
            - yyyy/mm/dd
            - yyyy-mm-dd
          description: The format of the date input if it is a date input
          example: mm/dd/yyyy
        selectable_status:
          type: string
          description: The status of the profiles that can be selected
          example: Active
        risk_type:
          type: string
          description: Type of risk that applies to the attribute
          example: OverallRisk
        ownership_driven:
          type: boolean
          description: Only shows profiles that the user currently has access to, to be selected
          example: true
        allow_multiple_selections:
          type: boolean
          description: Whether or not multiple selections can be made on something like a contributor search.
          example: true
        filtered_by_ne_attribute:
          type: boolean
          description: Whether or not the attribute is filtered by another attribute
          example: true
        filtering_ne_attribute_id:
          type: string
          format: uuid
          description: The ID of the filtering attribute
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        ne_attribute_filter_id:
          type: string
          format: uuid
          description: The ID of the attribute filter
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        reverse_association_attribute:
          $ref: '#/components/schemas/AttributeProperties'
        profile_type_id:
          type: string
          format: uuid
          description: The ID of the profile type the attribute applies to
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        data_type:
          type: string
          enum:
            - text field
            - text area
            - drop-down
            - radio buttons
            - check boxes
            - date
            - tags
            - attachment
            - profile select
            - profile search
            - owner select
            - owner search
            - contributor select
            - contributor search
          description: The type of data that applies to the attribute
          example: text field
        type:
          type: string
          enum:
            - AttachmentAttribute
            - CheckBoxesAttribute
            - ContributorSearchAttribute
            - ContributorSelectAttribute
            - DateAttribute
            - DropDownAttribute
            - OwnerSearchAttribute
            - OwnerSelectAttribute
            - ProfileSearchAttribute
            - ProfileSelectAttribute
            - RadioButtonsAttribute
            - TagsAttribute
            - TextAreaAttribute
            - TextFieldAttribute
          description: The attribute's type
          example: AttachmentAttribute
    Metadata:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
        next:
          type: string
          example: /endpoint?limit=10&offset=60
        previous:
          type: string
          example: /endpoint?limit=10&offset=40
    InvalidJson:
      type: object
      properties:
        error:
          example: Invalid JSON syntax. Please check your syntax and try again.
    ValidationErrors:
      type: object
      properties:
        error:
          example: The <object> failed to create/update
        errors:
          example:
            attribute: can't be blank
    Attribute-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the attribute
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
          description: The user-specified identifier of the attribute
          example: myattribute
        label:
          type: string
          description: The label for the attribute
          example: birthday
        description:
          type: string
          description: A description of the attribute
          example: Your birthday
        tool_tip:
          type: string
          description: The helper text that accompanies the attribute
          example: Put your birthday here mm-dd-yyyy
        archived:
          type: boolean
          description: Whether the attribute is archived
          example: false
        date_format:
          type: string
          enum:
            - mm/dd/yyyy
            - mm-dd-yyyy
            - dd/mm/yyyy
            - dd-mm-yyyy
            - yyyy/mm/dd
            - yyyy-mm-dd
          description: The format of the date input if it is a date input
          example: mm/dd/yyyy
        selectable_status:
          type: string
          description: The status of the profiles that can be selected
          example: Active
        risk_type:
          type: string
          description: Type of risk that applies to the attribute
          example: OverallRisk
        ownership_driven:
          type: boolean
          description: Only shows profiles that the user currently has access to, to be selected
          example: true
        allow_multiple_selections:
          type: boolean
          description: Whether or not multiple selections can be made on something like a contributor search.
          example: true
        filtered_by_ne_attribute:
          type: boolean
          description: Whether or not the attribute is filtered by another attribute
          example: true
        filtering_ne_attribute_id:
          type: string
          format: uuid
          description: The ID of the filtering attribute
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        ne_attribute_filter_id:
          type: string
          format: uuid
          description: The ID of the attribute filter
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        reverse_association_attribute:
          $ref: '#/components/schemas/AttributeProperties'
        profile_type_id:
          type: string
          format: uuid
          description: The ID of the profile type the attribute applies to
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        data_type:
          type: string
          enum:
            - text field
            - text area
            - drop-down
            - radio buttons
            - check boxes
            - date
            - tags
            - attachment
            - profile select
            - profile search
            - owner select
            - owner search
            - contributor select
            - contributor search
          description: The type of data that applies to the attribute
          example: text field
        type:
          type: string
          enum:
            - AttachmentAttribute
            - CheckBoxesAttribute
            - ContributorSearchAttribute
            - ContributorSelectAttribute
            - DateAttribute
            - DropDownAttribute
            - OwnerSearchAttribute
            - OwnerSelectAttribute
            - ProfileSearchAttribute
            - ProfileSelectAttribute
            - RadioButtonsAttribute
            - TagsAttribute
            - TextAreaAttribute
            - TextFieldAttribute
          description: The attribute's type
          example: AttachmentAttribute
        validations_attributes:
          type: object
          properties:
            validation_method:
              type: string
              enum:
                - required
                - unique
                - date_format
                - days
                - characters
                - extension
                - numericality
                - email_format
                - custom_format
                - no_special_chars
              description: The type of validation to be applied
              example: required
            value:
              type: string
              description: The value of the validator
              example: mm-dd-yyyy
            _destroy:
              type: boolean
              description: If the validator should be removed
              example: false
    AttributeOption:
      type: object
      properties:
        ne_attribute_id:
          type: string
          format: uuid
        option:
          type: string
    AttributeOption-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        ne_attribute_id:
          type: string
          format: uuid
        option:
          type: string
    AttributeOptions:
      type: object
      properties:
        ne_attribute_options:
          type: array
          items:
            $ref: '#/components/schemas/AttributeOption-2'
    Job:
      type: object
      properties:
        info:
          type: string
          example: job has started
        job_status:
          type: object
          properties:
            job_id:
              type: string
              example: 3ce88e47ad6dba2ddf349d21
            status:
              type: string
              example: queued
        status:
          type: int
          example: 200
    AttributeOptions-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
        ne_attribute_id:
          type: string
          format: uuid
        option:
          type: string
    ProfileTypeRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileTypeRule
        comparison_operator:
          type: string
          enum:
            - '=='
            - '!='
        value:
          type: string
          format: uuid
    ProfileStatusRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileStatusRule
        comparison_operator:
          type: string
          enum:
            - '=='
            - '!='
        value:
          type: string
          enum:
            - Active
            - Inactive
            - Leave of absence
            - Terminated
    ProfileAttributeRuleString:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileAttributeRule
        condition_object_type:
          type: string
          required: true
          enum:
            - TextFieldAttribute
            - TextAreaAttribute
        condition_object_id:
          type: string
          required: true
          format: uuid
        comparison_operator:
          type: string
          required: true
          enum:
            - '=='
            - '!='
            - '>'
            - <
            - start_with?
            - end_with?
            - include?
        value:
          type: string
          required: true
          example: Some value
    ProfileAttributeRuleDate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileAttributeRule
        condition_object_type:
          type: string
          required: true
          enum:
            - DateAttribute
        condition_object_id:
          type: string
          format: uuid
        secondary_attribute_type:
          type: string
          enum:
            - DateAttribute
        secondary_attribute_id:
          type: string
          format: uuid
        comparison_operator:
          type: string
          enum:
            - '>'
            - <
            - after
            - before
        value:
          type: string
          required: true
          enum:
            - Today
            - <uid>
        secondary_value:
          type: string
          enum:
            - after
            - before
        tertiary_value:
          type: string
          example: 30
    ProfileAttributeRuleId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileAttributeRule
        condition_object_type:
          type: string
          required: true
          enum:
            - ProfileSelectAttribute
            - ProfileSearchAttribute
            - OwnerSelectAttribute
            - OwnerSearchAttribute
            - ContributorSelectAttribute
            - ContributorSearchAttribute
        condition_object_id:
          type: string
          required: true
          format: uuid
        comparison_operator:
          type: string
          required: true
          enum:
            - include?
            - exclude?
        value:
          type: string
          required: true
          format: uuid
    RiskRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - RiskRule
        comparison_operator:
          type: string
          enum:
            - '=='
            - '>'
            - <
        value:
          type: string
          summary: id of the Risk Level being compared against
          required: true
          format: uuid
        secondary_value:
          type: string
          required: true
          enum:
            - OverallRisk
    AdvancedSearch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        label:
          type: string
        condition_rules_attributes:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/ProfileTypeRule'
              - $ref: '#/components/schemas/ProfileStatusRule'
              - $ref: '#/components/schemas/ProfileAttributeRuleString'
              - $ref: '#/components/schemas/ProfileAttributeRuleDate'
              - $ref: '#/components/schemas/ProfileAttributeRuleId'
              - $ref: '#/components/schemas/RiskRule'
    ProfileTypeRule-2:
      type: object
      properties:
        type:
          type: string
          required: true
          enum:
            - ProfileTypeRule
        comparison_operator:
          type: string
          required: true
          enum:
            - '=='
            - '!='
        value:
          type: string
          required: true
          format: uuid
    ProfileStatusRule-2:
      type: object
      properties:
        type:
          type: string
          required: true
          enum:
            - ProfileStatusRule
        comparison_operator:
          type: string
          required: true
          enum:
            - '=='
            - '!='
        value:
          type: string
          required: true
          enum:
            - Active
            - Inactive
            - Leave of absence
            - Terminated
    ProfileAttributeRuleString-2:
      type: object
      properties:
        type:
          type: string
          required: true
          enum:
            - ProfileAttributeRule
        condition_object_type:
          type: string
          required: true
          enum:
            - TextFieldAttribute
            - TextAreaAttribute
        condition_object_id:
          type: string
          required: true
          format: uuid
        comparison_operator:
          type: string
          required: true
          enum:
            - '=='
            - '!='
            - '>'
            - <
            - start_with?
            - end_with?
            - include?
        value:
          type: string
          required: true
          example: Some value
    ProfileAttributeRuleDate-2:
      type: object
      properties:
        type:
          type: string
          required: true
          enum:
            - ProfileAttributeRule
        condition_object_type:
          type: string
          required: true
          enum:
            - DateAttribute
        condition_object_id:
          type: string
          format: uuid
        secondary_attribute_type:
          type: string
          enum:
            - DateAttribute
        secondary_attribute_id:
          type: string
          format: uuid
        comparison_operator:
          type: string
          enum:
            - '>'
            - <
            - after
            - before
        value:
          type: string
          required: true
          enum:
            - Today
            - <uid>
        secondary_value:
          type: string
          enum:
            - after
            - before
        tertiary_value:
          type: string
          example: 30
    ProfileAttributeRuleId-2:
      type: object
      properties:
        type:
          type: string
          required: true
          enum:
            - ProfileAttributeRule
        condition_object_type:
          type: string
          required: true
          enum:
            - ProfileSelectAttribute
            - ProfileSearchAttribute
            - OwnerSelectAttribute
            - OwnerSearchAttribute
            - ContributorSelectAttribute
            - ContributorSearchAttribute
        condition_object_id:
          type: string
          required: true
          format: uuid
        comparison_operator:
          type: string
          required: true
          enum:
            - include?
            - exclude?
        value:
          type: string
          required: true
          format: uuid
    RiskRule-2:
      type: object
      properties:
        type:
          type: string
          required: true
          enum:
            - RiskRule
        comparison_operator:
          type: string
          enum:
            - '=='
            - '>'
            - <
        value:
          type: string
          summary: id of the Risk Level being compared against
          required: true
          format: uuid
        secondary_value:
          type: string
          required: true
          enum:
            - OverallRisk
    AdvancedSearch-2:
      type: object
      properties:
        label:
          type: string
        condition_rules_attributes:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/ProfileTypeRule-2'
              - $ref: '#/components/schemas/ProfileStatusRule-2'
              - $ref: '#/components/schemas/ProfileAttributeRuleString-2'
              - $ref: '#/components/schemas/ProfileAttributeRuleDate-2'
              - $ref: '#/components/schemas/ProfileAttributeRuleId-2'
              - $ref: '#/components/schemas/RiskRule-2'
    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The objects ID
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
          description: The objects UID
          example: profileUid
        name:
          type: string
          description: This is the name of the profile.
          example: Profile Name
        profile_type_id:
          type: string
          format: uuid
          description: This is the ID of the profile type the profile belongs to
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        status:
          type: string
          enum:
            - Active
            - Inactive
            - On Leave
            - Terminated
          description: This is the status of the profile
          example: Active
        id_proofing_status:
          type: string
          enum:
            - pending
            - pass
            - fail
          description: This is the ID proofing staus of the profile
          example: pending
        created_at:
          type: string
          format: date-time
          description: The date and time the profile was created
          example: '2023-11-21T14:23:54.256-05:00'
        updated_at:
          type: string
          format: date-time
          description: The date and time the profile was updated
          example: '2023-11-21T14:23:54.256-05:00'
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Attributes that belong to this profile.
          example:
            Non-Employee Profile ID: The Non-Employee Profile ID (will be returned for assignments, to be used during correlation configuration)
            text_attribute_uid: static text
            date_attribute_uid: 01/15/2020
            profile_select_attribute_uid: Profile Name
            profile_search_attribute_uid: Profile Name
            multiple_profile_search_attribute_uid: Profile Name,Second Profile Name,Third Profile Name
            multiple_profile_select_attribute_uid: Profile Name,Second Profile Name,Third Profile Name
            contributor_select_attribute_uid: User Name (user_email@test.com)
            contributor_search_attribute_uid: User Name (user_email@test.com)
            multiple_contributor_search_attribute_uid: User Name (user_email@test.com),Second User Name (user_email@test.com),Third User Name (user_email@test.com)
            owner_select_attribute_uid: User Name (user_email@test.com)
            owner_search_attribute_uid: User Name (user_email@test.com)
            dropdown_attribute_uid: yes, no
            tags_attribute_uid: yes, no
            checkbox_attribute_uid: yes, no
            text_area_uid: static text
            radio_attribute_uid: yes, no
    ProfileTypeRule-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileTypeRule
        comparison_operator:
          type: string
          enum:
            - '=='
            - '!='
        value:
          type: string
          format: uuid
        _destroy:
          type: boolean
          default: false
    ProfileStatusRule-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileStatusRule
        comparison_operator:
          type: string
          enum:
            - '=='
            - '!='
        value:
          type: string
          enum:
            - Active
            - Inactive
            - Leave of absence
            - Terminated
        _destroy:
          type: boolean
          default: false
    ProfileAttributeRuleString-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileAttributeRule
        condition_object_type:
          type: string
          required: true
          enum:
            - TextFieldAttribute
            - TextAreaAttribute
        condition_object_id:
          type: string
          required: true
          format: uuid
        comparison_operator:
          type: string
          required: true
          enum:
            - '=='
            - '!='
            - '>'
            - <
            - start_with?
            - end_with?
            - include?
        value:
          type: string
          required: true
          example: Some value
        _destroy:
          type: boolean
          default: false
    ProfileAttributeRuleDate-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileAttributeRule
        condition_object_type:
          type: string
          required: true
          enum:
            - DateAttribute
        condition_object_id:
          type: string
          format: uuid
        secondary_attribute_type:
          type: string
          enum:
            - DateAttribute
        secondary_attribute_id:
          type: string
          format: uuid
        comparison_operator:
          type: string
          enum:
            - '>'
            - <
            - after
            - before
        value:
          type: string
          required: true
          enum:
            - Today
            - <uid>
        secondary_value:
          type: string
          enum:
            - after
            - before
        tertiary_value:
          type: string
          example: 30
        _destroy:
          type: boolean
          default: false
    ProfileAttributeRuleId-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - ProfileAttributeRule
        condition_object_type:
          type: string
          required: true
          enum:
            - ProfileSelectAttribute
            - ProfileSearchAttribute
            - OwnerSelectAttribute
            - OwnerSearchAttribute
            - ContributorSelectAttribute
            - ContributorSearchAttribute
        condition_object_id:
          type: string
          required: true
          format: uuid
        comparison_operator:
          type: string
          required: true
          enum:
            - include?
            - exclude?
        value:
          type: string
          required: true
          format: uuid
        _destroy:
          type: boolean
          default: false
    RiskRule-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        type:
          type: string
          required: true
          enum:
            - RiskRule
        comparison_operator:
          type: string
          enum:
            - '=='
            - '>'
            - <
        value:
          type: string
          summary: id of the Risk Level being compared against
          required: true
          format: uuid
        secondary_value:
          type: string
          required: true
          enum:
            - OverallRisk
        _destroy:
          type: boolean
          default: false
    AdvancedSearch-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
        label:
          type: string
        condition_rules_attributes:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/ProfileTypeRule-3'
              - $ref: '#/components/schemas/ProfileStatusRule-3'
              - $ref: '#/components/schemas/ProfileAttributeRuleString-3'
              - $ref: '#/components/schemas/ProfileAttributeRuleDate-3'
              - $ref: '#/components/schemas/ProfileAttributeRuleId-3'
              - $ref: '#/components/schemas/RiskRule-3'
    AuditEvent:
      type: object
      properties:
        created_at:
          description: Search for record based on the created_at date
          type: object
          properties:
            gt:
              description: Greater Than - search for events with a date greater than the value
              type: string
              format: date
              example: 2024-10-18T16:41:23.232+00:00 | 10/18/2024
            lt:
              description: Less Than - search for events with a date less than the value
              type: string
              format: date
              example: 2024-10-18T16:41:23.232+00:00 | 10/18/2024
            eq:
              description: Equal - search for events with a date equal to the value
              type: string
              format: date
              example: 2024-10-18T16:41:23.232+00:00 | 10/18/2024
        subject_type:
          description: Categorization of audit event.
          type: string
          enum:
            - Profile
            - WorkflowSession
            - Email
            - FormAttributeForm
            - FormAttribute
            - Form
            - IdentityProofingResult
            - IdproxyPermission
            - NeAttributeOption
            - NeAttribute
            - Notification
            - WorkflowPage
            - ProfilePage
            - Permission
            - PortalRegistrationWorkflow
            - Portal
            - ProfileTypeRole
            - ProfileType
            - RoleProfile
            - NeprofileRole
            - NeaccessRole
            - IdproxyRole
            - SecurityQuestion
            - UserManager
            - UserProfile
            - UserRole
            - User
            - Validation
            - VerificationEmail
            - WorkflowAction
            - CreateWorkflow
            - UpdateWorkflow
            - AutomatedWorkflow
            - BatchWorkflow
            - ExpirationWorkflow
            - InvitationWorkflow
            - LoginWorkflow
            - PasswordResetWorkflow
            - RegistrationWorkflow
            - Get
            - Post
            - Patch
            - Delete
          example: Profile
        type:
          description: The type of audit event
          type: string
          enum:
            - AuditableProfileCreate
            - AuditableProfileUpdate
            - AuditableProfileDestroy
            - AuditableBulkProfileUpdate
            - AuditableProfileContributorAdd
            - AuditableProfileContributorRemove
            - AuditableProfileContributorRoleAdd
            - AuditableProfileContributorRoleRemove
            - AuditableProfileOwnerUpdate
            - AuditableProfileWorkflowEvent
            - AuditableWorkflowActionSkippedEvent
            - AuditableWorkflowApprovedEvent
            - AuditableWorkflowApprovedEvent
            - AuditableWorkflowAssignedEvent
            - AuditableWorkflowAutoAssignedEvent
            - AuditableWorkflowBatchCompleteEvent
            - AuditableWorkflowClosedEvent
            - AuditableWorkflowDuplicateCheckStartEvent
            - AuditableWorkflowDuplicateResolutionEvent
            - AuditableWorkflowFailedEvent
            - AuditableWorkflowIdentityProofedEvent
            - AuditableWorkflowInvitationSentEvent
            - AuditableWorkflowLdapProvidedEvent
            - AuditableWorkflowNotificationSentEvent
            - AuditableWorkflowPendingApprovalEvent
            - AuditableWorkflowPendingAssignmentEvent
            - AuditableWorkflowPendingFulfillmentEvent
            - AuditableWorkflowFulfilledEvent
            - AuditableWorkflowPendingIdentityProofEvent
            - AuditableWorkflowPendingLdapEvent
            - AuditableWorkflowPendingRequestEvent
            - AuditableWorkflowPendingReviewEvent
            - AuditableWorkflowProfileCreatedEvent
            - AuditableWorkflowProfileSelectEvent
            - AuditableWorkflowProfileUpdatedEvent
            - AuditableWorkflowRejectedEvent
            - AuditableWorkflowRequestMadeEvent
            - AuditableWorkflowRestApiEvent
            - AuditableWorkflowReviewedEvent
            - AuditableWorkflowRunningWorkflowEvent
            - AuditableWorkflowSoapApiEvent
            - AuditableWorkflowStatusChangedEvent
            - AuditableWorkflowStoredProcedureEvent
            - AuditableWorkflowUnassignEvent
            - AuditableWorkflowWaitingForWorkflowEvent
            - AuditableWorkflowWorkflowChangedEvent
            - ActiveRecordCreate
            - ActiveRecordUpdate
            - ActiveRecordDestroy
            - AuditableApiEvent
          example: AuditableProfileCreate
        subject_id:
          description: Identifier of the subject
          type: string
          format: uuid
          example: 7d8c53ca-e99d-485c-9524-ea3849e82c79
        data:
          type: object
          properties:
            profile_id:
              description: The profile id associated with the event
              type: string
              example: 7d8c53ca-e99d-485c-9524-ea3849e82c79
              format: uuid
            workflow_id:
              description: The workflow id associated with the event
              type: string
              example: 7d8c53ca-e99d-485c-9524-ea3849e82c79
              format: uuid
            workflow_name:
              description: The workflow name associated with the event
              type: string
              example: My Workflow
            workflow_uid:
              description: The workflow uid associated with the event
              type: string
              example: my_workflow
            profile_type_id:
              description: The profile type associated with the event
              type: string
              example: 7d8c53ca-e99d-485c-9524-ea3849e82c79
              format: uuid
    DataRecords:
      type: object
      properties:
        master_record_id:
          type: string
          description: The id of the master record
          example: 456738c9ba999a0076cf8a9b
    Delegation:
      type: object
      properties:
        id:
          type: string
          description: The id of the delegation
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        delegator_id:
          description: The id of the delegator user
          example: 12345678-1234-5678-1234-123456789012
        delegate_id:
          description: The id of the delegate user
          example: 87654321-4321-6789-4321-210987654321
        expiration:
          type: string
          format: date-time
          description: The expiration date of the delegation
          example: '2023-10-01T12:00:00Z'
        expired:
          type: boolean
          description: Indicates if the delegation is expired
          example: false
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record created.
          example: '2022-12-27 08:26:49.219717'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record was last updated.
          example: '2022-12-27 08:26:49.219717'
    Delegation-2:
      type: object
      properties:
        delegator_id:
          type: string
          description: The id of the delegator
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        delegate_id:
          type: string
          description: The id of the delegate
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        expiration:
          type: string
          format: date-time
          description: The expiration date of the delegation
          example: '2023-10-01T12:00:00Z'
    Delegation-3:
      type: object
      properties:
        delegation:
          type: object
          properties:
            delegator_id:
              type: string
              description: The ID of the delegator
              example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
            delegatee_id:
              type: string
              description: The ID of the delegatee
              example: 12345678-1234-5678-1234-567812345678
            expiration_date:
              type: string
              format: date-time
              description: The date and time when the delegation expires
              example: '2023-12-31T23:59:59Z'
    Form:
      type: object
      properties:
        uid:
          type: string
          description: The user-specified identifier of the form
          example: form_uid
        description:
          type: text
          example: Form for creating new profile
          description: The description of the form
        name:
          type: string
          example: My Form Name
          description: The name of the form
        archived:
          type: boolean
          example: false
          description: Determines whether the form is archived
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the form
          example: 2e06b876-f456-473d-bd65-b6435e0b6b2d
    Forms:
      type: object
      properties:
        uid:
          type: string
          description: The user-specified identifier of the form
          example: form_uid
        description:
          type: text
          example: Form for creating new profile
          description: The description of the form
        name:
          type: string
          example: My Form Name
          description: The name of the form
        archived:
          type: boolean
          example: false
          description: Determines whether the form is archived
    Form-2:
      type: object
      properties:
        uid:
          type: string
          description: The user-specified identifier of the form
          example: form_uid
        description:
          type: text
          example: Form for creating new profile
          description: The description of the form
        name:
          type: string
          example: My Form Name
          description: The name of the form
        archived:
          type: boolean
          example: false
          description: Determines whether the form is archived
    FormAttribute:
      type: object
      properties:
        form_id:
          type: string
          description: The id of the form
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        ne_attribute_id:
          type: string
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
          description: The id of the attribute
        attr_type:
          type: string
          example: ne_attribute
          description: The attribute type
          enum:
            - ne_attribute
            - break
        order:
          type: integer
          format: int32
          example: 1
          description: The ordinal position of the attribute on the Form.  The order value determines the order or sequence the Form values are presented in the user interface. Each FormAttribute on a Form must have a unique order value. Order valuess can start at zero (0), but often start at one (1). The FormAttribute with order 1 is presented before the FormAttribute with order 2, and so on. Gaps in the order can exist and the system ignores them.
        id:
          type: string
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
          description: The id of the form attribute
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record created.
          example: '2022-12-27 08:26:49.219717'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record was last updated.
          example: '2022-12-27 08:26:49.219717'
    FormAttributes:
      type: object
      properties:
        form_id:
          type: string
          description: The id of the form
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        ne_attribute_id:
          type: string
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
          description: The id of the attribute
        attr_type:
          type: string
          example: ne_attribute
          description: The attribute type
          enum:
            - ne_attribute
            - break
        order:
          type: integer
          format: int32
          example: 1
          description: The ordinal position of the attribute on the Form.  The order value determines the order or sequence the Form values are presented in the user interface. Each FormAttribute on a Form must have a unique order value. Order valuess can start at zero (0), but often start at one (1). The FormAttribute with order 1 is presented before the FormAttribute with order 2, and so on. Gaps in the order can exist and the system ignores them.
    FormAttribute-2:
      type: object
      properties:
        form_id:
          type: string
          description: The id of the form
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        ne_attribute_id:
          type: string
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
          description: The id of the attribute
        attr_type:
          type: string
          example: ne_attribute
          description: The attribute type
          enum:
            - ne_attribute
            - break
        order:
          type: integer
          format: int32
          example: 1
          description: The ordinal position of the attribute on the Form.  The order value determines the order or sequence the Form values are presented in the user interface. Each FormAttribute on a Form must have a unique order value. Order valuess can start at zero (0), but often start at one (1). The FormAttribute with order 1 is presented before the FormAttribute with order 2, and so on. Gaps in the order can exist and the system ignores them.
    IdentityProofingResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        identity_proofing_action_id:
          type: string
          format: uuid
        workflow_session_id:
          type: string
          format: uuid
        profile_id:
          type: string
          format: uuid
        proofing_workflow:
          type: string
          format: uuid
        result:
          type: string
          enum:
            - pending
            - pass
            - fail
        proofing_attributes:
          type: object
          additionalProperties:
            type: string
          example:
            result: approve
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    MetadataWithAfterId:
      type: object
      properties:
        limit:
          type: integer
          description: The maximum number of records to return in the search
          example: /endpoint?limit=10
          format: int32
        offset:
          type: integer
          description: The number of records to skip before starting to return results.
          example: /endpoint?offset=60
          format: int32
        total:
          type: integer
          description: The total number of records available matching the search criteria.
          example: /endpoint?total=10
          format: int32
        next:
          type: string
          description: The ID of the first record in the next set of results
          example: /endpoint?limit=10&offset=60
        previous:
          type: string
          description: The ID of the last record in the previous set of results
          example: /endpoint?limit=10&offset=40
        after_id:
          type: string
          format: uuid
          example: 4eaa719f-4312-4c5b-9264-d0eb04d4a02a
          description: The ID from which the search will start, ignoring all records before it.
    Language:
      type: object
      properties:
        default:
          type: boolean
          description: Set default to True to set a default language, to set another language to default, set default to True on the target language and the current default will become disabled
          example: true
        enabled:
          type: boolean
          description: True when the language is enabled, False when it is not
          example: true
        locale:
          type: string
          description: The locale string for the language, current options are- en, fr, es, de, fr-CA
          example: es
    PageContent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the page content
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        uid:
          type: string
          description: The user-specified identifier for the record
          example: first_text_body
        type:
          type: string
          enum:
            - FormHeading
            - LargeHeading
            - MediumHeading
            - SmallHeading
            - Paragraph
            - HtmlContainer
            - Owner
            - RequestProgressBar
          required: true
          description: The type of content on the page.
          example: MediumHeading
        content:
          type: string
          description: The text content to present in this page content record.
          example: Lorem Ipsum yadda yaddda bing bang.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record created.
          example: '2022-12-27 08:26:49.219717'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record was last updated.
          example: '2022-12-27 08:26:49.219717'
    PageContent-2:
      type: object
      properties:
        uid:
          type: string
          description: The user-specified identifier for the record
          example: first_text_body
        type:
          type: string
          enum:
            - FormHeading
            - LargeHeading
            - MediumHeading
            - SmallHeading
            - Paragraph
            - HtmlContainer
            - Owner
            - RequestProgressBar
          required: true
          description: The type of content on the page.
          example: MediumHeading
        content:
          type: string
          description: The text content to present in this page content record.
          example: Lorem Ipsum yadda yaddda bing bang.
    PageContentTranslation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the page content
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        uid:
          type: string
          description: The user-specified identifier for the record
          example: page_content_transation_great_es_es
        locale:
          type: string
          description: The language locale this translation contains.
          example: es-ES
        value:
          type: string
          description: The translated string to present in the user interface.
          example: Es stupendo!
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record created.
          example: '2022-12-27 08:26:49.219717'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record was last updated.
          example: '2022-12-27 08:26:49.219717'
    PageContentTranslation-2:
      type: object
      properties:
        uid:
          type: string
          description: The user-specified identifier for the record
          example: page_content_translation_spanish_great
        page_content_uid:
          type: string
          format: uuid
          description: The user-specified identifier of the page content record this translation applies to; one of page_content_id or page_content_uid must be present.
          example: some_page_content
        page_content_id:
          type: string
          format: uuid
          description: The id of the page content record this translation applies to; one of page_content_id or page_content_uid must be present.
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        locale:
          type: string
          description: The language locale this translation contains.
          example: es-ES
        value:
          type: string
          description: The translated string to present in the user interface.
          example: Es stupendo!
    ProfilePage:
      type: object
      properties:
        uid:
          type: string
          description: The user-specified identifier of the page
          example: page_uid
        description:
          type: text
          example: Page for workflow
          description: The description of the page
        name:
          type: string
          example: My Page Name
          description: The name of the page
        archived:
          type: boolean
          example: false
          description: Determines whether the page is archived
    Pages:
      type: object
      properties:
        uid:
          type: string
          description: The user-specified identifier of the page
          example: page_uid
        description:
          type: text
          example: Page for workflow
          description: The description of the page
        name:
          type: string
          example: My Page Name
          description: The name of the page
        archived:
          type: boolean
          example: false
          description: Determines whether the page is archived
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the form
          example: 2e06b876-f456-473d-bd65-b6435e0b6b2d
    WorkflowPage:
      type: object
      properties:
        uid:
          type: string
          description: The user-specified identifier of the page
          example: page_uid
        description:
          type: text
          example: Page for workflow
          description: The description of the page
        name:
          type: string
          example: My Page Name
          description: The name of the page
        archived:
          type: boolean
          example: false
          description: Determines whether the page is archived
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the form
          example: 2e06b876-f456-473d-bd65-b6435e0b6b2d
    PageElement:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the page content
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        uid:
          type: string
          description: The user-specified identifier for the record
          example: first_text_body
        element_type:
          type: string
          enum:
            - PageContent
            - Form
          required: true
          description: The type of content on the page.
          example: PageContent
        page_uid:
          type: string
          format: uuid
          description: The user-specified identifier of the page record this applies to; one of page_id or page_uid must be present.
          example: some_page_content
        page_id:
          type: string
          format: uuid
          description: The id of the page record this applies to; one of page_id or page_uid must be present.
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        element_uid:
          type: string
          format: uuid
          description: The user-specified identifier of the record (Form or PageContent) this applies to; one of element_id or element_uid must be present.
          example: some_page_content
        element_id:
          type: string
          format: uuid
          description: The id of the record (Form or PageContent) this applies to; one of element_id or element_uid must be present.
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        order:
          type: integer
          format: int32
          example: 1
          description: The position of the attribute in the ProfileType's naming
    PageElement-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the page content
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        uid:
          type: string
          description: The user-specified identifier for the record
          example: first_text_body
        element_type:
          type: string
          enum:
            - PageContent
            - Form
          required: true
          description: The type of content on the page.
          example: PageContent
        page_uid:
          type: string
          format: uuid
          description: The user-specified identifier of the page record this applies to; one of page_id or page_uid must be present.
          example: some_page_content
        page_id:
          type: string
          format: uuid
          description: The id of the page record this applies to; one of page_id or page_uid must be present.
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        element_uid:
          type: string
          format: uuid
          description: The user-specified identifier of the record (Form or PageContent) this applies to; one of element_id or element_uid must be present.
          example: some_page_content
        element_id:
          type: string
          format: uuid
          description: The id of the record (Form or PageContent) this applies to; one of element_id or element_uid must be present.
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        order:
          type: integer
          format: int32
          example: 1
          description: The ordinal position of the attribute in the user-interface page.
    PageElement-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the page content
          example: ac4aae0b-4140-49a4-a84c-126762fd0c8f
        uid:
          type: string
          description: The user-specified identifier for the record
          example: first_text_body
        element_type:
          type: string
          enum:
            - PageContent
            - Form
          required: true
          description: The type of content on the page.
          example: PageContent
        page_uid:
          type: string
          format: uuid
          description: The user-specified identifier of the page record this applies to; one of page_id or page_uid must be present.
          example: some_page_content
        page_id:
          type: string
          format: uuid
          description: The id of the page record this applies to; one of page_id or page_uid must be present.
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        element_uid:
          type: string
          format: uuid
          description: The user-specified identifier of the record (Form or PageContent) this applies to; one of element_id or element_uid must be present.
          example: some_page_content
        element_id:
          type: string
          format: uuid
          description: The id of the record (Form or PageContent) this applies to; one of element_id or element_uid must be present.
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        order:
          type: integer
          format: int32
          example: 1
          description: The position of the attribute in the ProfileType's naming
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record created.
          example: '2022-12-27 08:26:49.219717'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: The date-time the record was last updated.
          example: '2022-12-27 08:26:49.219717'
    Permission:
      type: object
      properties:
        role_id:
          type: string
          format: uuid
          description: The id of the role
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        subject_id:
          type: string
          format: uuid
          example: db3d85ef-c324-458b-b206-58debaa96419
          description: The ID of the object that the permission is giving access to
        value:
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
          example: 1
          description: The permissions level of access
        subject:
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
          example: 0
          description: The type of permission
    Permission-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the permission
          example: 2e06b876-f456-473d-bd65-b6435e0b6b2d
        role_id:
          type: string
          format: uuid
          description: The id of the role
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        value:
          type: integer
          format: int32
          example: 1
          description: The permissions level of access
        subject:
          type: integer
          format: int32
          example: 1
          description: The type of permission
        subject_id:
          type: string
          format: uuid
          example: db3d85ef-c324-458b-b206-58debaa96419
          description: The ID of the object that the permission is giving access to
    Profile-2:
      type: object
      properties:
        name:
          type: string
          description: The profile name.
          example: First Last
        profile_type_id:
          type: string
          format: uuid
          required: true
          description: The profile type id.
          example: 79ed1cb6-9977-4965-9bfe-f2bcc2424444
        status:
          type: string
          enum:
            - Active
            - Inactive
            - On Leave
            - Terminated
          required: true
          description: The profile status.
          example: Active
        id_proofing_status:
          type: string
          enum:
            - pending
            - pass
            - fail
          description: The id proofing status of the profile.
          example: pass
        archived:
          type: boolean
          default: false
          description: Describes whether the profile is archived or not.
          example: false
        attributes:
          type: object
          description: The attributes associated with the profile.
          additionalProperties:
            type: string
          example:
            text_attribute_uid: static text
            date_attribute_uid: 01/15/2020
            profile_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_select_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            profile_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            contributor_select_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            contributor_search_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            multiple_contributor_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            dropdown_attribute_uid: yes, no
            tags_attribute_uid: yes, no
            checkbox_attribute_uid: yes, no
            text_area_uid: static text
            radio_attribute_uid: yes, no
    Profiles:
      type: object
      properties:
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
    Profiles-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The profile ID.
          example: 79ed1cb6-8888-4965-9bfe-f2bcc242523e
        name:
          type: string
          description: The profile name.
          example: First Last
        profile_type_id:
          type: string
          format: uuid
          description: The profile type id.
          example: 79ed1cb6-9977-4965-9bfe-f2bcc2424444
        status:
          type: string
          enum:
            - Active
            - Inactive
            - On Leave
            - Terminated
          description: The profile status.
          example: Active
        id_proofing_status:
          type: string
          enum:
            - pending
            - pass
            - fail
          description: The id proofing status of the profile.
          example: pass
        archived:
          type: boolean
          default: false
          description: Describes whether the profile is archived or not.
          example: false
        attributes:
          type: object
          additionalProperties:
            type: string
          description: The attributes associated with the profile.
          example:
            text_attribute_uid: static text
            date_attribute_uid: 01/15/2020
            profile_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_select_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            profile_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            contributor_select_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            contributor_search_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            multiple_contributor_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            dropdown_attribute_uid: yes, no
            tags_attribute_uid: yes, no
            checkbox_attribute_uid: yes, no
            text_area_uid: static text
            radio_attribute_uid: yes, no
    Profile-3:
      type: object
      properties:
        name:
          type: string
          description: The profile name.
          example: First Last
        profile_type_id:
          type: string
          format: uuid
          description: The profile type id.
          example: 79ed1cb6-9977-4965-9bfe-f2bcc2424444
        status:
          type: string
          enum:
            - Active
            - Inactive
            - On Leave
            - Terminated
          description: The profile status.
          example: Active
        id_proofing_status:
          type: string
          enum:
            - pending
            - pass
            - fail
          description: The id proofing status of the profile.
          example: pass
        archived:
          type: boolean
          default: false
          description: Describes whether the profile is archived or not.
          example: false
        attributes:
          type: object
          description: The attributes associated with the profile.
          additionalProperties:
            type: string
          example:
            text_attribute_uid: static text
            date_attribute_uid: 01/15/2020
            profile_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_select_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            profile_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            contributor_select_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            contributor_search_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            multiple_contributor_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            dropdown_attribute_uid: yes, no
            tags_attribute_uid: yes, no
            checkbox_attribute_uid: yes, no
            text_area_uid: static text
            radio_attribute_uid: yes, no
    Url:
      type: object
      properties:
        url:
          type: string
          format: url
          readOnly: true
    ProfileType:
      type: object
      properties:
        name:
          type: string
          description: This is the name of the profile type.
          example: Worker
        category:
          type: string
          enum:
            - employee
            - non-employee
            - organization
            - assignment
            - other
          description: This is the category the profile type falls into.
          example: employee
        bypass_dup_protection:
          type: boolean
          default: false
          description: Whether or not duplication protection is bypassed.
          example: false
        archived:
          type: boolean
          default: false
          description: Whether or not the profile type is archived.
          example: false
        permitted_role_ids:
          type: array
          items:
            type: string
            format: uuid
          description: The role ids that are permitted for this profile type.
          example:
            - 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        isc_synced:
          type: boolean
          default: false
          description: Is this profile type synced with ics
          example: false
        profile_type_dup_attributes_attributes:
          type: array
          items:
            type: object
            properties:
              ne_attribute_id:
                type: string
                format: uuid
                description: The ID of the ne attribute.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        profile_type_namings_attributes:
          type: array
          items:
            type: object
            properties:
              ne_attribute_id:
                type: string
                format: uuid
                description: The ID of the associated ne attribute.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
              order:
                type: integer
                minimum: 0
                description: The order that the namings are used in.
                example: 0
    ProfileType-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The objects ID.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
          description: The objects UID.
          example: ptUid
        name:
          type: string
          description: This is the name of the profile type.
          example: Worker
        category:
          type: string
          enum:
            - employee
            - non-employee
            - organization
            - assignment
            - other
          description: This is the category the profile type falls into.
          example: employee
        bypass_dup_protection:
          type: boolean
          description: Whether or not duplication protection is bypassed.
          example: false
        archived:
          type: boolean
          description: Whether or not the profile type is archived.
          example: false
        permitted_role_ids:
          type: array
          items:
            type: string
            format: uuid
          description: The role ids that are permitted for this profile type.
          example:
            - 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        isc_synced:
          type: boolean
          description: Is this profile type synced with ics
          example: false
        profile_type_dup_attributes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The ID of the properties that are used for duplication protection.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
              uid:
                type: string
                minLength: 32
                maxLength: 32
                description: The user-specified identifier of the properties that are used for duplication protection.
                example: attribute-uid
              profile_type_id:
                type: string
                format: uuid
                description: The ID of the profile type.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
              ne_attribute_id:
                type: string
                format: uuid
                description: The ID of the ne attribute.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        profile_type_namings:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The ID of the profile type naming.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
              uid:
                type: string
                minLength: 32
                maxLength: 32
                description: The user-specified identifier of the profile type naming.
                example: profile-type-name
              profile_type_id:
                type: string
                format: uuid
                description: The ID of the associated profile type.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
              ne_attribute_id:
                type: string
                format: uuid
                description: The ID of the associated ne attribute.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
              order:
                type: integer
                minimum: 0
                description: The order that the namings are used in.
                example: 0
    ProfileType-3:
      type: object
      properties:
        name:
          type: string
          description: This is the name of the profile type.
          example: Worker
        category:
          type: string
          enum:
            - employee
            - non-employee
            - organization
            - assignment
            - other
          description: This is the category the profile type falls into.
          example: employee
        bypass_dup_protection:
          type: boolean
          description: Whether or not duplication protection is bypassed.
          example: false
        archived:
          type: boolean
          description: Whether or not the profile type is archived.
          example: false
        permitted_role_ids:
          type: array
          items:
            type: string
            format: uuid
          description: The role ids that are permitted for this profile type.
          example:
            - 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        isc_synced:
          type: boolean
          default: false
          description: Is this profile type synced with ics
          example: false
        profile_type_dup_attributes_attributes:
          type: array
          items:
            type: object
            properties:
              ne_attribute_id:
                type: string
                format: uuid
                description: The ID of the ne attribute.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        profile_type_namings_attributes:
          type: array
          items:
            type: object
            properties:
              ne_attribute_id:
                type: string
                format: uuid
                description: The ID of the associated ne attribute.
                example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
              order:
                type: integer
                minimum: 0
                description: The order that the namings are used in.
                example: 0
    ProfileTypeRoles:
      type: object
      properties:
        profile_type_id:
          type: string
          description: The id of the profile type
          example: 2eb5773f-2486-452f-bdb3-796133b30862
        role_id:
          type: string
          description: The id of the role
          example: 2eb5773f-2486-452f-bdb3-796133b30862
    ProfileTypeRoles-2:
      type: object
      properties:
        profile_type_id:
          type: string
          description: The id of the profile type
          example: 2eb5773f-2486-452f-bdb3-796133b30862
        role_id:
          type: string
          description: The id of the role
          example: 2eb5773f-2486-452f-bdb3-796133b30862
        id:
          type: string
          description: The id of the profile type role
          example: 2e06b876-f456-473d-bd65-b6435e0b6b2d
    ProfileTypeAttribute:
      type: object
      properties:
        id:
          description: ID of ne attribute
          type: string
          format: uuid
          readOnly: true
          example: 1246d8b3-ac29-4015-8154-dea4434a73fa
        uid:
          description: Ne attribute's uid
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
          example: 1246d8b3-ac29-4015-8154-dea4434a73fa
        label:
          description: Ne attribute's label
          type: string
          required: true
          readOnly: true
          example: object
        synced:
          description: synced_attribute ID if there is one
          type: uuid
          required: false
          example: 1246d8b3-ac29-4015-8154-dea4434a73fa
    ProfileTypeAttributes:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: How many ne attribute records exist
          example: 5
        records:
          type: array
          items:
            $ref: '#/components/schemas/ProfileTypeAttribute'
    SyncedAttribute:
      type: object
      properties:
        ne_attribute_id:
          type: string
          format: uuid
          example: 1246d8b3-ac29-4015-8154-dea4434a73fa
          description: synced attribute's ID
    SyncedAttribute-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 1246d8b3-ac29-4015-8154-dea4434a73fa
          description: synced attribute's ID
        profile_type_id:
          type: string
          format: uuid
          readOnly: true
          example: 1246d8b3-ac29-4015-8154-dea4434a73fa
          description: Profile type ID of synced attribute
        ne_attribute_id:
          type: string
          format: uuid
          readOnly: true
          example: 1246d8b3-ac29-4015-8154-dea4434a73fa
          description: Ne attribute ID of synced attribute
    RiskLevel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        label:
          type: string
        points:
          type: number
          multipleOf: 0.01
        order:
          type: integer
          minimum: 0
    RiskScore:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        object_id:
          type: string
          format: uuid
        object_type:
          type: string
          enum:
            - Profile
            - WorkflowSession
        overall_score:
          type: number
          multipleOf: 0.01
        overall_risk_level_id:
          type: string
          format: uuid
        impact_score:
          type: number
          multipleOf: 0.01
        impact_risk_level_id:
          type: string
          format: uuid
        probability_score:
          type: number
          multipleOf: 0.01
        probability_risk_level_id:
          type: string
          format: uuid
    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
          example: sponsors_role
        name:
          type: string
          example: Sponsors
        groups:
          type: array
          items:
            type: string
            example: ad_group_name
    Role-2:
      type: object
      properties:
        uid:
          type: string
          minLength: 32
          maxLength: 32
          example: sponsors_role
        type:
          type: string
          enum:
            - NeprofileRole
            - NeaccessRole
        name:
          type: string
          example: Sponsors
        groups:
          type: array
          items:
            type: string
            example: ad_group_name
    Roles:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Role-3:
      type: object
      properties:
        type:
          type: string
          enum:
            - NeprofileRole
            - NeaccessRole
          description: The type of role
          example: NeprofileRole
        name:
          type: string
          example: Sponsors
          description: The name of the user role
        archived:
          type: boolean
          description: Set to true to archive, false to unarchive
          example: true
        groups:
          type: array
          description: Role groups
          items:
            type: string
            example: ad_group_name
    RoleProfile:
      type: object
      properties:
        role_id:
          type: string
          format: uuid
        profile_id:
          type: string
          format: uuid
    RoleProfile-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        role_id:
          type: string
          format: uuid
        profile_id:
          type: string
          format: uuid
    RoleProfiles:
      type: object
      properties:
        role_profiles:
          type: array
          items:
            $ref: '#/components/schemas/RoleProfile-2'
    RoleProfiles-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role_id:
          type: string
          format: uuid
        profile_id:
          type: string
          format: uuid
    SystemRole:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the object
          example: 2e06b876-f456-473d-bd65-b6435e0b6b2d
          readOnly: true
        uid:
          type: string
          description: The user identifier for the object
          minLength: 32
          maxLength: 32
          readOnly: true
          enum:
            - profile_contributor
            - profile_owner
          example: profile_contributor
        name:
          description: The name of the role
          type: string
          enum:
            - Profile Contributor
            - Profile Owner
          example: Profile Contributor
    SystemRolePermission:
      type: object
      properties:
        system_role_id:
          type: string
          format: uuid
          description: The id of the system role
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        subject_id:
          type: string
          format: uuid
          example: db3d85ef-c324-458b-b206-58debaa96419
          description: The ID of the object that the permission is giving access to
        value:
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
          example: 1
          description: The permissions level of access
        subject:
          type: integer
          format: int32
          enum:
            - 0
            - 2
            - 14
          example: 0
          description: The type of permission
    SystemRolePermission-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The id of the system role permission
          example: 2e06b876-f456-473d-bd65-b6435e0b6b2d
        system_role_id:
          type: string
          format: uuid
          description: The id of the system role
          example: ef5d413f-ba18-49e6-9a72-bb115aa133ff
        value:
          type: integer
          format: int32
          example: 1
          description: The permissions level of access
        subject:
          type: integer
          format: int32
          example: 1
          description: The type of permission
        subject_id:
          type: string
          format: uuid
          example: db3d85ef-c324-458b-b206-58debaa96419
          description: The ID of the object that the permission is giving access to
    User:
      type: object
      properties:
        name:
          type: string
          required: true
          description: The user name
          example: Bob
        email:
          type: string
          format: email
          required: true
          description: The user email
          example: test@sailpoint.com
        type:
          type: string
          enum:
            - NeprofileUser
            - NeaccessUser
          default: NeprofileUser
          description: The user type
          example: NeprofileUser
        profile_id:
          type: string
          format: uuid
          description: The user profile id. Not required for NeprofileUser
          example: db6f8e8b-65c2-47d5-a0db-90bcc4e9df9e
        title:
          type: string
          description: The user description
          example: my_user_title
        status:
          type: string
          enum:
            - Active
            - Pending
            - Disabled
          required: true
          description: The user status
          example: Active
        login:
          type: string
          required: true
          description: The user login
          example: my_user
        group_strings:
          type: string
          description: The user group strings
          example: Administrator_group,Developer_group
        locale:
          type: string
          description: The locale the user prefers to use
          example: fr-CA
        password:
          type: string
          description: The user password. Not required for NeprofileUser
          required: false
          example: U*bF7hy9fW
    User-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readonly: true
          example: db6f8e8b-65c2-47d5-a0db-90bcc4e9df9e
          description: ID of the object to retrieve or update
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readonly: true
          example: user1
          description: UID of the user
        name:
          type: string
          description: The name
          example: myusername
        email:
          type: string
          format: email
          description: The email
          example: test@sailpoint.com
        type:
          type: string
          enum:
            - NeprofileUser
            - NeaccessUser
          default: NeprofileUser
          description: Type of user
          example: NeprofileUser
        title:
          type: string
          description: The title
          example: Director
        status:
          type: string
          enum:
            - Active
            - Pending
            - Disabled
          description: Status of the user
          example: Active
        login:
          type: string
          description: The login
          example: myLogin
        last_login:
          type: string
          format: date-time
          readOnly: true
          description: When the user last logged in
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
        cookies_accepted_at:
          type: string
          format: date-time
          readOnly: true
          description: When cookies were accepted
          example: Wed, 07 Feb 2024 12:55:20.456682000 EST -05:00
        preferred_language:
          type: string
          description: The locale the user prefers to use
          example: fr-CA
        locale:
          type: string
          description: The locale the user prefers to use
          example: fr-CA
        group_strings:
          type: string
          description: Group strings configured on the customer's Active Directory configuration, provided by the IDP at the moment on authentication.
          example: Admin_group, Developer_group
        sailpoint_identity_id:
          type: string
          description: The identity ID of the user in ISC
          example: 9496f8d6ddab49c0bef1e9ee6f1b835a
    Users:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User-2'
    User-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
          required: true
          writeOnly: true
          example: db6f8e8b-65c2-47d5-a0db-90bcc4e9df9e
          description: ID of the object to retrieve or update
        name:
          type: string
          description: The name
          example: myusername
        email:
          type: string
          format: email
          description: The email
          example: test@sailpoint.com
        type:
          type: string
          enum:
            - NeprofileUser
            - NeaccessUser
          default: NeprofileUser
          description: Type of user
          example: NeprofileUser
        profile_id:
          type: string
          format: uuid
          description: ID of the profile
          example: db6f8e8b-65c2-47d5-a0db-90bcc4e9df9e
        title:
          type: string
          description: The title
          example: Director
        status:
          type: string
          enum:
            - Active
            - Pending
            - Disabled
          description: Status of the user
          example: Active
        login:
          type: string
          description: The login
          example: myLogin
        group_strings:
          type: string
          description: The group strings
          example: Administrator_group,Developer_group
        locale:
          type: string
          description: The locale the user prefers to use
          example: fr-CA
    UserManager:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        manager_id:
          type: string
          format: uuid
    UserManager-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        user_id:
          type: string
          format: uuid
        manager_id:
          type: string
          format: uuid
    UserManagers:
      type: object
      properties:
        user_managers:
          type: array
          items:
            $ref: '#/components/schemas/UserManager-2'
    UserManagers-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        manager_id:
          type: string
          format: uuid
    UserProfile:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        profile_id:
          type: string
          format: uuid
        ne_attribute_id:
          type: string
          format: uuid
        relationship_type:
          type: string
          enum:
            - owner
            - contributor
    UserProfile-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        user_id:
          type: string
          format: uuid
        profile_id:
          type: string
          format: uuid
        ne_attribute_id:
          type: string
          format: uuid
        relationship_type:
          type: string
          enum:
            - owner
            - contributor
    UserProfiles:
      type: object
      properties:
        user_profiles:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile-2'
    UserProfiles-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        profile_id:
          type: string
          format: uuid
        ne_attribute_id:
          type: string
          format: uuid
        relationship_type:
          type: string
          enum:
            - owner
            - contributor
    UserRole:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        role_id:
          type: string
          format: uuid
    UserRole-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
        user_id:
          type: string
          format: uuid
        role_id:
          type: string
          format: uuid
    UserRoles:
      type: object
      properties:
        user_roles:
          type: array
          items:
            $ref: '#/components/schemas/UserRole-2'
    UserRoles-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        role_id:
          type: string
          format: uuid
    CreateWorkflow:
      type: object
      properties:
        profile_type_id:
          type: string
          format: uuid
          required: true
          description: The profile type the workflow effects.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        status:
          type: string
          enum:
            - Enabled
            - Disabled
          required: true
          description: Whether or not the workflow is enabled or disabled.
          example: Enabled
        uid:
          type: string
          required: true
          description: The user-specified identifier of the workflow.
          example: my_uid
        name:
          type: string
          required: true
          description: Name of the workflow
          example: my_workflow
    WorkflowSession:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The objects ID.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        uid:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
          description: The objects UID.
          example: wsUid
        workflow_id:
          type: string
          format: uuid
          description: The workflow id.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        requester_id:
          type: string
          format: uuid
          description: The requester's id.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        requester_type:
          type: string
          enum:
            - User
            - NeprofileUser
            - NeaccessUser
          description: The requester type.
          example: User
        profile_id:
          type: string
          format: uuid
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
          description: The profile this workflow session will be working with. Only Applicable for Update workflows
        profile_ids:
          type: array
          items:
            type: string
            format: uuid
          example: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
          description: The profiles this workflow session will be working with. Only Applicable for Batch workflows
        status:
          type: string
          enum:
            - api_request_sent
            - approved
            - assigned
            - attempting_to_start_workflow
            - AUTH-STATUS1
            - AUTH-STATUS2
            - AUTH-STATUS3
            - AUTH-STATUS4
            - AUTH-STATUS5
            - AUTH-STATUS6
            - AUTH-STATUS7
            - AUTH-STATUS8
            - AUTH-STATUS9
            - auto_assigned
            - batch_completed
            - checking_for_duplicates
            - closed
            - completed
            - courion_add
            - courion_extend
            - courion_terminate
            - courion_update
            - duplicates_resolved
            - failed
            - fulfilled
            - invitation_sent
            - ldap_provided
            - new
            - non_employee_created
            - non_employee_updated
            - notified
            - pending_approval
            - pending_assignment
            - pending_courion_add
            - pending_courion_extend
            - pending_courion_terminate
            - pending_courion_update
            - pending_creation
            - pending_fulfillment
            - pending_ldap
            - pending_notification
            - pending_profile_select
            - pending_request
            - pending_review
            - pending_status_change
            - pending_stored_procedure
            - pending_trigger
            - pending_update
            - processing
            - profile_check_complete
            - profiles_selected
            - rejected
            - requested
            - reviewed
            - soap_request_sent
            - started_workflow
            - status_changed
            - stored_procedure
            - un_assigned
            - waiting_on_workflow
            - workflow_changed
          example: completed
          description: The status of the workflow session.
        attributes:
          type: object
          additionalProperties:
            type: string
          description: The attributes asscoiated with the workflow session.
          example:
            text_attribute_uid: static text
            date_attribute_uid: 01/15/2020
            profile_select_attribute_uid: Profile Name
            profile_search_attribute_uid: Profile Name
            multiple_profile_search_attribute_uid: Profile Name,Second Profile Name,Third Profile Name
            multiple_profile_select_attribute_uid: Profile Name,Second Profile Name,Third Profile Name
            contributor_select_attribute_uid: User Name (user_email@test.com)
            contributor_search_attribute_uid: User Name (user_email@test.com)
            multiple_contributor_search_attribute_uid: User Name (user_email@test.com),Second User Name (user_email@test.com),Third User Name (user_email@test.com)
            owner_select_attribute_uid: User Name (user_email@test.com)
            owner_search_attribute_uid: User Name (user_email@test.com)
            dropdown_attribute_uid: yes, no
            tags_attribute_uid: yes, no
            checkbox_attribute_uid: yes, no
            text_area_uid: static text
            radio_attribute_uid: yes, no
    UpdateWorkflow:
      type: object
      properties:
        profile_type_id:
          type: string
          format: uuid
          required: true
          description: The profile type the workflow effects.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        status:
          type: string
          enum:
            - Enabled
            - Disabled
          required: true
          description: Whether or not the workflow is enabled or disabled.
          example: Enabled
        uid:
          type: string
          required: true
          description: The user-specified identifier of the workflow.
          example: my_uid
        name:
          type: string
          required: true
          description: Name of the workflow
          example: my_workflow
        profile_status:
          type: string
          required: true
          description: The status of the profiles the workflow will effect.
          example: active
    BatchWorkflow:
      type: object
      properties:
        profile_type_id:
          type: string
          format: uuid
          required: true
          description: The profile type the workflow effects.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        status:
          type: string
          enum:
            - Enabled
            - Disabled
          required: true
          description: Whether or not the workflow is enabled or disabled.
          example: Enabled
        uid:
          type: string
          required: true
          description: The user-specified identifier of the workflow.
          example: my_uid
        name:
          type: string
          required: true
          description: Name of the workflow
          example: my_workflow
        options:
          type: object
          properties:
            all_profiles:
              type: string
              enum:
                - 'true'
                - 'false'
              description: Used for batch workflows.
              example: 'true'
            multiple_requests:
              type: string
              enum:
                - 'true'
                - 'false'
              description: Used for batch workflows for if multiple requests.
              example: 'false'
    AutomatedWorkflow:
      type: object
      properties:
        profile_type_id:
          type: string
          format: uuid
          required: true
          description: The profile type the workflow effects.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        status:
          type: string
          enum:
            - Enabled
            - Disabled
          required: true
          description: Whether or not the workflow is enabled or disabled.
          example: Enabled
        uid:
          type: string
          required: true
          description: The user-specified identifier of the workflow.
          example: my_uid
        name:
          type: string
          required: true
          description: Name of the workflow
          example: my_workflow
        condition_rules_attributes:
          type: array
          items:
            type: object
            properties:
              logical_operator:
                type: string
                enum:
                  - AND
                  - OR
                required: true
                description: The type of condition rule.
                example: RiskRule
              comparison_operator:
                type: string
                enum:
                  - <
                  - '>'
                  - '=='
                  - before
                  - include?
                  - absent?
                  - after
                required: true
                description: The operator used by the condition rule.
                example: '>'
              condition_object_id:
                type: string
                required: false
                description: UUID for object targeted by the condition.
                example: cc844e99-9895-43d0-9d17-8f606b2158ba
              condition_object_type:
                type: string
                required: false
                description: Type of object targeted by the condition.
                example: DateAttribute
              secondary_value:
                type: string
                required: false
                description: Used for time_frame comparison.
                example: before
              tertiary_value:
                type: string
                required: false
                description: Represents the days of a temporal comparison.
                example: before
              value:
                type: string
                required: false
                description: The value being compared against.
                example: before
              order:
                type: integer
                format: int32
                required: false
                description: If there are multiple rules against one workflow, this is the order that they are ran in.
                example: 1
              type:
                type: string
                enum:
                  - RiskRule
                  - ProfileIdRule
                  - ProfileTypeRule
                  - ProfileExistsRule
                  - ProfileStatusRule
                  - SessionAttributeRule
                  - ProfileAttributeRule
                  - ProfileDoesNotExistRule
                  - IdentityProofingRule
                required: true
                description: The type of condition rule.
                example: ProfileIdRule
          description: The ProfileTypeRule this workflow will be working with.
          example:
            - type: ProfileTypeRule
              condition_type: Workflow
              comparison_operator: '=='
              logical_operator: AND
              value: 'true'
    LoginWorkflow:
      type: object
      properties:
        profile_type_id:
          type: string
          format: uuid
          required: true
          description: The profile type the workflow effects.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        status:
          type: string
          enum:
            - Enabled
            - Disabled
          required: true
          description: Whether or not the workflow is enabled or disabled.
          example: Enabled
        uid:
          type: string
          required: true
          description: The user-specified identifier of the workflow.
          example: my_uid
        name:
          type: string
          required: true
          description: Name of the workflow
          example: my_workflow
        options:
          type: object
          properties:
            expiration_time:
              type: integer
              format: int32
              minimum: 1
              description: Used for login/password reset for when the password will expire.
              example: 1
    ApprovalAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: false
          description: The description of the workflow action.
          example: Require approval from another user or a group of users with a specific role.
        page_id:
          type: string
          format: uuid
          required: true
          description: The page the workflow action should render.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        skippable:
          type: boolean
          default: false
          description: If the workflow action is skippable or not.
          example: false
        requires_comment:
          type: boolean
          default: false
          description: If the workflow action requires a comment or not.
          example: false
    WorkflowAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: false
          description: The description of the workflow action.
          example: Require approval from another user or a group of users with a specific role.
        page_id:
          type: string
          format: uuid
          required: true
          description: The page the workflow action should render.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        add_requester_as_owner:
          type: boolean
          default: true
          description: If the requester should be added as the owner of the profile to be created.
          example: true
        email_attribute_id:
          type: string
          format: uuid
          required: false
          description: The attribute storing the email address for the workflow action.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        email_addresses:
          type: array
          required: false
          items:
            type: string
            format: text
          description: The email addresses for the workflow action.
          example:
            - johndoe@gmail.com
            - janedoe@gmail.com
        new_status:
          type: string
          format: text
          required: false
          description: The new status for the Status Change workflow action.
          example: Active, Inactive, On Leave, Terminated
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        skippable:
          type: boolean
          default: false
          description: If the workflow action is skippable or not.
          example: false
        requires_comment:
          type: boolean
          default: false
          description: If the workflow action requires a comment or not.
          example: false
    AskSecurityQuestionAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Prompt the user to answer some personal security questions.
        number_of_questions:
          type: integer
          format: int32
          required: true
          description: The number of questions the user should answer upon login.
          example: 1
        token_expiration:
          type: integer
          format: int32
          required: true
          description: The token expiration time, coordinates with token_expiration_type.
          example: 1
        token_expiration_type:
          type: string
          required: true
          enum:
            - hours
            - days
            - login attempts
            - always
          description: The token expiration type, coordinates with token_expiration.
          example: days
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    AutoAssignAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Automatically assigns contributors to this profile.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        contributor_attr:
          type: string
          format: uuid
          required: false
          description: The id of the contributor attribute for contributors from another profile. If workflow_action_roles are not associated to this object, this is required.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
    BatchUpdateAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Updates a batch of profiles with all attributes collected during the workflow.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    CloseSessionAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Closes the current workflow session.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    ContributorsAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Have the requester determine the contributors or owner of the profile.
        owner:
          type: string
          required: false
          enum:
            - true
            - false
          description: If the assignment option should be an owner.  Owner, Contributors, or Roles must be chosen.
          example: 'true'
        contributors:
          type: string
          required: false
          enum:
            - true
            - false
          description: If the assignment option should be contributors. Owner, Contributors, or Roles must be chosen.
          example: 'true'
        roles:
          type: string
          required: false
          enum:
            - true
            - false
          description: If the assignment option should be roles. Owner, Contributors, or Roles must be chosen.
          example: 'true'
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    CreateProfileAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Creates a profile with all attributes collected during the workflow.
        add_requester_as_owner:
          type: boolean
          default: true
          description: If the requester should be added as the owner of the profile to be created.
          example: true
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    DuplicatePreventionAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Allows a user to select an already existing profile, or create a new one for the request.
        search_scope:
          type: string
          required: true
          enum:
            - all
            - current
          description: The search scope of the profiles to check against.
          example: current
        ne_attribute_ids:
          type: array
          required: false
          description: An array of ne_attribute_ids.
          example:
            - 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        handle_id:
          type: string
          required: false
          description: The handle id.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    EmailVerificationAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Have the user verify their email address.
        email_expiration:
          type: integer
          format: int32
          required: true
          description: The email expiration time, in minutes.
          example: 20
        token_expiration:
          type: integer
          format: int32
          required: true
          description: The token expiration time, coordinates with token_expiration_type.
          example: 1
        token_expiration_type:
          type: string
          required: true
          enum:
            - hours
            - days
            - login attempts
            - always
          description: The token expiration type, coordinates with token_expiration.
          example: days
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    FulfillmentAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Have another user or group provide information for the profile.
        page_id:
          type: string
          format: uuid
          required: false
          description: The page the workflow action should render.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        requires_comment:
          type: boolean
          default: false
          description: If the workflow action requires a comment or not.
          example: false
    IdentityProofingAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Have the user account associated with this profile validate the identity data.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    InvitationAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Creates a registration session associated with an email address
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        configuration_attributes:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: the id.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            wait_for_completion:
              type: boolean
              example: false
              description: If the invitation action should pause the parent workflow to wait for completion.
            return_profile:
              type: boolean
              example: false
              description: If the invitation action should return a profile.
            portal_id:
              type: string
              format: uuid
              description: the id of the portal.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            registration_workflow_id:
              type: string
              format: uuid
              description: the id of the registration workflow.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            email_attribute_id:
              type: string
              format: uuid
              description: the id of the email attribute.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            validate_completed_registration:
              type: boolean
              example: false
              description: If the action should validate against completed registrations by email address.
            validate_open_registration:
              type: boolean
              example: false
              description: If the action should validate against open registrations by email address.
        workflow_action_email_attributes:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: the id.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            workflow_action_id:
              type: string
              format: uuid
              description: the id of the workflow action.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            email_id:
              type: string
              format: uuid
              description: the id of the email.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            type:
              type: string
              description: the type of email.
              enum:
                - StandardEmail
                - PerformerNotificationEmail
                - ApprovalEmail
                - RejectionEmail
              example: StandardEmail
    LdapAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Create a Collaboration user account for this profile.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        store_type:
          type: string
          required: true
          enum:
            - Local
            - Directory
          description: the type of store.
          example: Local
        ldap_action_user_roles_attributes:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: the id.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            role_id:
              type: string
              format: uuid
              description: the id of the role.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        workflow_action_value_builders_attributes:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: the id.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            workflow_action_id:
              type: string
              format: uuid
              description: the id of the workflow action.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            value_builder_id:
              type: string
              format: uuid
              description: the id of the value builder.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            position:
              type: integer
              format: int32
              description: the position of the value builder attribute.
              example: 1
        workflow_action_directory_groups_attributes:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: the id.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            directory_id:
              type: string
              format: uuid
              description: the id of the directory.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            group_label:
              type: string
              format: text
              description: the group label.
              example: Admin
            group_dn:
              type: string
              format: text
              description: the group dn.
              example: group
    NotificationAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Send a notification to a group of users.
        email_attribute_id:
          type: string
          format: uuid
          required: false
          description: The attribute storing the email address for the workflow action.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        email_addresses:
          type: array
          required: false
          items:
            type: string
            format: text
          description: The email addresses for the workflow action.
          example:
            - johndoe@gmail.com
            - janedoe@gmail.com
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        workflow_action_email_attributes:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: the id.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            workflow_action_id:
              type: string
              format: uuid
              description: the id of the workflow action.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            email_id:
              type: string
              format: uuid
              description: the id of the email.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            type:
              type: string
              enum:
                - StandardEmail
              description: the type of email.
              example: StandardEmail
    PasswordResetAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Prompt the user to reset their password.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    ProfileCheckAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Finds a profile based on selected attributes and values found in the session.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        ne_attribute_ids:
          type: array
          required: false
          description: An array of ne_attribute_ids.
          example:
            - 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        handle_type:
          type: string
          required: false
          enum:
            - session
            - attribute
          description: The handle type for what should happen if an existing profile is found.
          example: session
        handle_id:
          type: string
          required: false
          description: The handle id.  When handle type is session, this is the session id.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
    ProfileSelectAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Select the profiles that you want to run this workflow for.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    RequestAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Provides the requester a page with forms.
        page_id:
          type: string
          format: uuid
          required: false
          description: The page the workflow action should render.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        requires_comment:
          type: boolean
          default: false
          description: If the workflow action requires a comment or not.
          example: false
    RestApiAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Makes a request to a Restful API.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    ReviewAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Allows the requester to review.
        page_id:
          type: string
          format: uuid
          required: false
          description: The page the workflow action should render.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        requires_comment:
          type: boolean
          default: false
          description: If the workflow action requires a comment or not.
          example: false
    RunWorkflowAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Runs another workflow with the ability to pass data in between.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        configuration_attributes:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: the id.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            workflow_id:
              type: string
              format: uuid
              description: the id of the workflow.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            wait_for_completion:
              type: boolean
              description: If the parent workflow should wait for the child to complete.
              example: false
            profile_to_send:
              type: string
              enum:
                - none
                - current
                - attribute
                - profile_type
              description: the profile the parent should send to the child workflow.
              example: current
            return_profile:
              type: boolean
              description: if the child workflow should return a profile.
              example: false
            run_workflow_action_id:
              type: string
              format: uuid
              description: the id of the child workflow to run.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
            profile_type_id:
              type: string
              format: uuid
              description: the id of the profile type.
              example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
    SetAttributesAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Set attribute(s) to a specific value.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    SetSecurityQuestionAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Prompt the user to provide some personal security questions and answers.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
        number_of_questions:
          type: integer
          format: int32
          required: true
          description: The number of questions the user should answer upon login.
          example: 1
    SoapApiAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Makes a request to a SOAP API.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    StatusChangeAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Changes the status of a non-employee.
        new_status:
          type: string
          format: text
          required: false
          enum:
            - Active
            - Inactive
            - On Leave
            - Terminated
          description: The new status for the Status Change workflow action.
          example: Active
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    UnassignAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Un-assigns roles from a profile.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    UpdateProfileAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Updates a profile with all attributes collected during the workflow.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    UsernamePasswordAction:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow the workflow action belongs to.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        description:
          type: string
          required: true
          description: The description of the workflow action.
          example: Prompt the user for their username and password.
        archived:
          type: boolean
          default: false
          description: If the workflow action is archived or not.
          example: false
    WorkflowActionPerformers:
      type: object
      properties:
        contributor_attribute_id:
          type: string
          format: uuid
          description: Specify the id of the user attribute to perform the action.
          example: e6905f25-489a-43cd-a758-bdacaf60dcab
        contributors:
          type: boolean
          default: false
          description: Set to true to allow profile contributor to perform the action.
          example: true
        contributors_manager_attribute_id:
          type: string
          format: uuid
          description: Specify the id of the user attribute to perform the action.
          example: e6905f25-489a-43cd-a758-bdacaf60dcab
        owner:
          type: boolean
          default: false
          description: Set to true to allow profile owner to perform the action.
          example: true
        profiles_contributors_attribute_id:
          type: string
          format: uuid
          description: Specify the id of the profile attribute to perform the action.
          example: e6905f25-489a-43cd-a758-bdacaf60dcab
        requester:
          type: boolean
          default: false
          description: Set to true to allow requester from the request to perform the action.
          example: true
        requesters_manager:
          type: boolean
          default: false
          description: Set to true to allow the requester's manager from the request to perform the action.
          example: true
        workflow_action_id:
          type: string
          format: uuid
          description: Specify the id of the workflow action you would like to create the workflow action performer/s for.
          example: e6905f25-489a-43cd-a758-bdacaf60dcab
    WorkflowActionPerformers-2:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The id of the workflow action performer that was created.
          example: e6905f25-489a-43cd-a758-bdacaf60dcab
        contributor_attribute_id:
          type: string
          format: uuid
          description: The id of the user attribute to perform the action.
          example: e6905f25-489a-43cd-a758-bdacaf60dcab
        contributors:
          type: boolean
          default: false
          description: Set to allow profile contributor to perform the action.
          example: true
        contributors_manager_attribute_id:
          type: string
          format: uuid
          description: The id of the user attribute to perform the action.
          example: e6905f25-489a-43cd-a758-bdacaf60dcab
        owner:
          type: boolean
          default: false
          description: Set to allow profile owner to perform the action.
          example: true
        profiles_contributors_attribute_id:
          type: string
          format: uuid
          description: The id of the profile attribute to perform the action.
          example: e6905f25-489a-43cd-a758-bdacaf60dcab
        requester:
          type: boolean
          default: false
          description: Set to allow requester from the request to perform the action.
          example: true
        requesters_manager:
          type: boolean
          default: false
          description: Set to allow the requester's manager from the request to perform the action.
          example: true
        workflow_action_id:
          type: string
          format: uuid
          description: The id of the workflow action.
          example: e6905f25-489a-43cd-a758-bdacaf60dcab
    WorkflowSession-2:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          required: true
          description: The workflow id.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        requester_id:
          type: string
          format: uuid
          required: true
          description: The requester's id.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        requester_type:
          type: string
          enum:
            - User
            - NeprofileUser
            - NeaccessUser
          required: true
          description: The requester type.
          example: User
        profile_id:
          type: string
          format: uuid
          description: The profile this workflow session will be working with. Only Applicable for Update workflows
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        profile_ids:
          type: array
          items:
            type: string
            format: uuid
          example: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
          description: The profiles this workflow session will be working with. Only Applicable for Batch workflows
        attributes:
          type: object
          description: The attributes asscoiated with the workflow session.
          additionalProperties:
            type: string
          example:
            text_attribute_uid: static text
            date_attribute_uid: 01/15/2020
            profile_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_select_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            profile_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            contributor_select_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            contributor_search_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            multiple_contributor_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            dropdown_attribute_uid: yes, no
            tags_attribute_uid: yes, no
            checkbox_attribute_uid: yes, no
            text_area_uid: static text
            radio_attribute_uid: yes, no
    WorkflowSession-3:
      type: object
      properties:
        workflow_id:
          type: string
          format: uuid
          description: The workflow id.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        requester_id:
          type: string
          format: uuid
          description: The requester's id.
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        requester_type:
          type: string
          enum:
            - User
            - NeprofileUser
            - NeaccessUser
          description: The requester type.
          example: User
        profile_id:
          type: string
          format: uuid
          description: The profile this workflow session will be working with. Only Applicable for Update workflows
          example: 33f072dd-13b4-41e1-8ea0-16f2a59b57c8
        profile_ids:
          type: array
          items:
            type: string
            format: uuid
          description: The profiles this workflow session will be working with. Only Applicable for Batch workflows
          example: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
        status:
          type: string
          enum:
            - api_request_sent
            - approved
            - assigned
            - attempting_to_start_workflow
            - AUTH-STATUS1
            - AUTH-STATUS2
            - AUTH-STATUS3
            - AUTH-STATUS4
            - AUTH-STATUS5
            - AUTH-STATUS6
            - AUTH-STATUS7
            - AUTH-STATUS8
            - AUTH-STATUS9
            - auto_assigned
            - batch_completed
            - checking_for_duplicates
            - closed
            - completed
            - courion_add
            - courion_extend
            - courion_terminate
            - courion_update
            - duplicates_resolved
            - failed
            - fulfilled
            - invitation_sent
            - ldap_provided
            - new
            - non_employee_created
            - non_employee_updated
            - notified
            - pending_approval
            - pending_assignment
            - pending_courion_add
            - pending_courion_extend
            - pending_courion_terminate
            - pending_courion_update
            - pending_creation
            - pending_fulfillment
            - pending_ldap
            - pending_notification
            - pending_profile_select
            - pending_request
            - pending_review
            - pending_status_change
            - pending_stored_procedure
            - pending_trigger
            - pending_update
            - processing
            - profile_check_complete
            - profiles_selected
            - rejected
            - requested
            - reviewed
            - soap_request_sent
            - started_workflow
            - status_changed
            - stored_procedure
            - un_assigned
            - waiting_on_workflow
            - workflow_changed
          example: completed
          description: The status of the workflow session.
        attributes:
          type: object
          additionalProperties:
            type: string
          description: The attributes asscoiated with the workflow session.
          example:
            text_attribute_uid: static text
            date_attribute_uid: 01/15/2020
            profile_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_select_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            profile_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            multiple_profile_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            contributor_select_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            contributor_search_attribute_uid: 49ed1cb6-9977-4965-9bfe-f2bcc2425244
            multiple_contributor_search_attribute_uid: 59ed1cb6-9977-4965-9bfe-f2bcc242523e, 89ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_select_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            owner_search_attribute_uid: 79ed1cb6-9977-4965-9bfe-f2bcc242523e
            dropdown_attribute_uid: yes, no
            tags_attribute_uid: yes, no
            checkbox_attribute_uid: yes, no
            text_area_uid: static text
            radio_attribute_uid: yes, no
  responses:
    '400':
      description: Bad Request - unable to complete.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/InvalidJson'
              - $ref: '#/components/schemas/ValidationErrors'
    '404':
      description: Record Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                description: The requested record, either ID or UID, was not found
                example: The requested Profile was not found
    '500':
      description: Internal Server Error - returned on unhandled exceptions.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                description: A message describing the error
                example: Sorry something went wrong
    Attributes_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              ne_attributes:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    Attribute:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              ne_attribute:
                type: object
                $ref: '#/components/schemas/Attribute'
    AttributeOption:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              ne_attribute_option:
                type: object
                $ref: '#/components/schemas/AttributeOption-2'
    InvalidInput:
      description: Invalid input
    AttributeOptions_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              ne_attribute_options:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeOption-2'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    AttributeOptionsJob:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/AttributeOptions'
              - $ref: '#/components/schemas/Job'
    DeleteConfirmation:
      description: Confirmation of a deleted object
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                type: string
                default: The option '{Option Value}' has been deleted
    AdvancedSearches:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              advanced_search:
                type: array
                items:
                  $ref: '#/components/schemas/AdvancedSearch'
    AdvancedSearch:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              advanced_search:
                type: object
                $ref: '#/components/schemas/AdvancedSearch'
    Profiles:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
    AuditEvents:
      description: AuditEvents
      content:
        application/json:
          schema:
            type: object
            properties:
              audit_events:
                type: array
                items:
                  $ref: '#/components/schemas/AuditEvent'
    Delegations:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              delegations:
                type: array
                items:
                  $ref: '#/components/schemas/Delegation'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    Delegation:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              delegation:
                type: object
                $ref: '#/components/schemas/Delegation'
    Forms:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              forms:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
    FormAttribute:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              form_attribute:
                type: object
                $ref: '#/components/schemas/FormAttribute'
    IdentityProofingResults:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              identity_proofing_results:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProofingResult'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    IscAccounts:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
              _metadata:
                $ref: '#/components/schemas/MetadataWithAfterId'
    Profile:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              profile:
                type: object
                $ref: '#/components/schemas/Profile'
    Job:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              uid:
                type: string
                format: uuid
              status:
                type: string
                example: complete
              job_type:
                type: string
                example: import
              job_data:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                      format: uuid
                    manager_id:
                      type: string
                      format: uuid
                    errors:
                      type: array
                      items:
                        type: string
                        example: Validation error for record in job
    Language:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              language:
                type: object
                $ref: '#/components/schemas/Language'
    PageContent:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              page:
                type: object
                $ref: '#/components/schemas/PageContent'
    PageContentTranslation:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              page_content_translation:
                type: object
                $ref: '#/components/schemas/PageContentTranslation'
    Pages:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              page:
                type: object
                $ref: '#/components/schemas/Pages'
    PageElement:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              page_element:
                type: object
                $ref: '#/components/schemas/PageElement'
    Permission:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              permission:
                type: object
                $ref: '#/components/schemas/Permission-2'
    Profiles_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
              _metadata:
                $ref: '#/components/schemas/MetadataWithAfterId'
    ProfilesJob:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Profiles'
              - $ref: '#/components/schemas/Job'
    Url:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Url'
    ProfileType:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              profile_type:
                type: object
                $ref: '#/components/schemas/ProfileType-2'
    ProfileTypes_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              profile_types:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileType-2'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    Info:
      description: Info about the operation
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                description: A message confirming the operation
                example: object deleted
    ProfileTypeRoles:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              profile_type_roles:
                type: object
                $ref: '#/components/schemas/ProfileTypeRoles-2'
    ProfileTypeAttributes_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              profile_type_attributes:
                type: object
                $ref: '#/components/schemas/ProfileTypeAttributes'
    SyncedAttribute:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              synced_attribute:
                type: object
                $ref: '#/components/schemas/SyncedAttribute-2'
    RiskLevels_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              risk_levels:
                type: array
                items:
                  $ref: '#/components/schemas/RiskLevel'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    RiskLevel:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              risk_level:
                type: object
                $ref: '#/components/schemas/RiskLevel'
    RiskScores:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              risk_scores:
                type: array
                items:
                  $ref: '#/components/schemas/RiskScore'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    RiskScore:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              risk_score:
                type: object
                $ref: '#/components/schemas/RiskScore'
    Roles_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              roles:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    RolesJob:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Roles'
              - $ref: '#/components/schemas/Job'
    Role:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              role:
                type: object
                $ref: '#/components/schemas/Role'
    RoleProfile:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              role_profile:
                type: object
                $ref: '#/components/schemas/RoleProfile-2'
    RoleProfiles_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              role_profiles:
                type: array
                items:
                  $ref: '#/components/schemas/RoleProfile-2'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    RoleProfilesJob:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/RoleProfiles'
              - $ref: '#/components/schemas/Job'
    System_Roles_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              system_roles:
                type: array
                items:
                  $ref: '#/components/schemas/SystemRole'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    SystemRolePermission:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              system_role_permission:
                type: object
                $ref: '#/components/schemas/SystemRolePermission-2'
    User:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                type: object
                $ref: '#/components/schemas/User-2'
    Users_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  $ref: '#/components/schemas/User-2'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    UsersJob:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Users'
              - $ref: '#/components/schemas/Job'
    UserManager:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              user_manager:
                type: object
                $ref: '#/components/schemas/UserManager-2'
    UserManagers_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              user_managers:
                type: array
                items:
                  $ref: '#/components/schemas/UserManager-2'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    UserManagersJob:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Job'
              - $ref: '#/components/schemas/UserManagers'
    UserProfile:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              user_profile:
                type: object
                $ref: '#/components/schemas/UserProfile-2'
    UserProfiles_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              user_profiles:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile-2'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    UserProfilesJob:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/UserProfiles'
              - $ref: '#/components/schemas/Job'
    UserRole:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              user_role:
                type: object
                $ref: '#/components/schemas/UserRole-2'
    UserRoles_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              user_roles:
                type: array
                items:
                  $ref: '#/components/schemas/UserRole-2'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    UserRolesJob:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/UserRoles'
              - $ref: '#/components/schemas/Job'
    Workflow:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow:
                type: object
                $ref: '#/components/schemas/WorkflowSession'
    WorkflowAction:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/WorkflowAction'
    WorkflowActions:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_actions:
                type: object
                $ref: '#/components/schemas/WorkflowAction'
    WorkflowActionPerformers:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action_performer:
                type: object
                $ref: '#/components/schemas/WorkflowActionPerformers-2'
    WorkflowSessions_Meta:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_sessions:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowSession'
              _metadata:
                $ref: '#/components/schemas/Metadata'
    WorkflowSession:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_session:
                type: object
                $ref: '#/components/schemas/WorkflowSession'
  requestBodies:
    Attribute:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              ne_attribute:
                type: object
                $ref: '#/components/schemas/Attribute-2'
    AttributeOption:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              ne_attribute_option:
                type: object
                $ref: '#/components/schemas/AttributeOption'
    AttributeOptions:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              ne_attribute_options:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeOption'
    AttributeOptions-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              ne_attribute_options:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeOptions-2'
    AdvancedSearch:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              advanced_search:
                type: object
                $ref: '#/components/schemas/AdvancedSearch-2'
    AdvancedSearch-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              advanced_search:
                type: object
                $ref: '#/components/schemas/AdvancedSearch-3'
    AuditEvents:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              audit_events:
                type: object
                properties:
                  offset:
                    description: How many records to skip before pulling records to return.
                    type: integer
                    format: int32
                    example: 100
                  sort_by:
                    description: A column that we are sorting these records from.
                    type: string
                    example: created_at
                  limit:
                    description: The limiting count for the amount of records returned.
                    type: integer
                    example: 10
                    format: int32
                    maximum: 100
                  order:
                    description: Which direction the list should be sorted by
                    type: string
                    enum:
                      - asc
                      - desc
                    example: asc
                  filters:
                    $ref: '#/components/schemas/AuditEvent'
    Consolidation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataRecords'
    Delegation:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              delegation:
                type: object
                $ref: '#/components/schemas/Delegation-2'
    Delegation-2:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Delegation-3'
    Forms:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              forms:
                type: array
                items:
                  $ref: '#/components/schemas/Forms'
    Form:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role:
                type: object
                $ref: '#/components/schemas/Form-2'
    FormAttribute:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              form_attribute:
                type: object
                $ref: '#/components/schemas/FormAttributes'
    FormAttribute-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              form_attribute:
                type: object
                $ref: '#/components/schemas/FormAttribute-2'
    ProfileAccount:
      content:
        application/json:
          schema:
            type: object
            properties:
              profile:
                name: profile
                in: body
                required: true
                description: The profile object to be updated with its schema-mapped attributes.
                type: object
                properties:
                  attributes:
                    required: false
                    type: object
                    description: schema-mapped attributes to be updated
                example:
                  attributes:
                    First Name: John
                    Last Name: Doe
                    Email: john.doe@sailpoint.com
    Language:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              language:
                type: object
                $ref: '#/components/schemas/Language'
    PageContent:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page_content:
                type: object
                $ref: '#/components/schemas/PageContent-2'
    PageConent:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page_content:
                type: object
                $ref: '#/components/schemas/PageContent-2'
    PageContentTranslation:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page_content_translation:
                type: object
                $ref: '#/components/schemas/PageContentTranslation-2'
    PageConentTranslation:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page_content_translation:
                type: object
                $ref: '#/components/schemas/PageContent-2'
    ProfilePage:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page:
                type: object
                $ref: '#/components/schemas/ProfilePage'
    WorkflowPage:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page:
                type: object
                $ref: '#/components/schemas/WorkflowPage'
    PageElement:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page_element:
                type: object
                $ref: '#/components/schemas/PageElement-2'
    PageElement-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page_element:
                type: object
                $ref: '#/components/schemas/PageElement-3'
    Permissions:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              permission:
                type: object
                $ref: '#/components/schemas/Permission'
    Profile:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              profile:
                type: object
                $ref: '#/components/schemas/Profile-2'
    Profiles:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: '#/components/schemas/Profile-2'
    Profiles-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
    Profiles-3:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              profiles:
                type: array
                items:
                  $ref: '#/components/schemas/Profiles-2'
    Profile-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              profile:
                type: object
                $ref: '#/components/schemas/Profile-3'
    File:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
    ProfileType:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              profile_type:
                type: object
                $ref: '#/components/schemas/ProfileType'
    ProfileType-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              profile_type:
                type: object
                $ref: '#/components/schemas/ProfileType-3'
    ProfileTypeRoles:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              profile_type_role:
                type: object
                $ref: '#/components/schemas/ProfileTypeRoles'
    SyncedAttributes:
      required: true
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/SyncedAttribute'
    Roles:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              roles:
                type: array
                items:
                  $ref: '#/components/schemas/Role-2'
    Roles-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              roles:
                type: array
                items:
                  $ref: '#/components/schemas/Role-3'
    Role:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role:
                type: object
                $ref: '#/components/schemas/Role-2'
    Role-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role:
                type: object
                $ref: '#/components/schemas/Role-3'
    RoleProfile:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role_profile:
                type: object
                $ref: '#/components/schemas/RoleProfile'
    RoleProfiles:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role_profiles:
                type: array
                items:
                  $ref: '#/components/schemas/RoleProfile'
    RoleProfiles-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role_profiles:
                type: array
                items:
                  $ref: '#/components/schemas/RoleProfiles-2'
    SystemRolePermissions:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              system_role_permission:
                type: object
                $ref: '#/components/schemas/SystemRolePermission'
    User:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                type: object
                $ref: '#/components/schemas/User'
    Users:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    Users-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  $ref: '#/components/schemas/User-3'
    User-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                type: object
                $ref: '#/components/schemas/User-3'
    UserManager:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_manager:
                type: object
                $ref: '#/components/schemas/UserManager'
    UserManagers:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_managers:
                type: array
                items:
                  $ref: '#/components/schemas/UserManager'
    UserManagers-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_managers:
                type: array
                items:
                  $ref: '#/components/schemas/UserManagers-2'
    UserProfile:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_profile:
                type: object
                $ref: '#/components/schemas/UserProfile'
    UserProfiles:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_profiles:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
    UserProfiles-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_profiles:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
    UserProfiles-3:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_profiles:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfiles-2'
    UserRole:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_role:
                type: object
                $ref: '#/components/schemas/UserRole'
    UserRoles:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_roles:
                type: array
                items:
                  $ref: '#/components/schemas/UserRole'
    UserRoles-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_roles:
                type: array
                items:
                  $ref: '#/components/schemas/UserRoles-2'
    CreateWorkflow:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow:
                type: object
                $ref: '#/components/schemas/CreateWorkflow'
    UpdateWorkflow:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow:
                type: object
                $ref: '#/components/schemas/UpdateWorkflow'
    BatchWorkflow:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow:
                type: object
                $ref: '#/components/schemas/BatchWorkflow'
    AutomatedWorkflow:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow:
                type: object
                $ref: '#/components/schemas/AutomatedWorkflow'
    LoginWorkflow:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow:
                type: object
                $ref: '#/components/schemas/LoginWorkflow'
    ApprovalAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/ApprovalAction'
    AskSecurityQuestionAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/AskSecurityQuestionAction'
    AutoAssignAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/AutoAssignAction'
    BatchUpdateAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/BatchUpdateAction'
    CloseSessionAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/CloseSessionAction'
    ContributorsAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/ContributorsAction'
    CreateProfileAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/CreateProfileAction'
    DuplicatePreventionAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/DuplicatePreventionAction'
    EmailVerificationAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/EmailVerificationAction'
    FulfillmentAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/FulfillmentAction'
    IdentityProofingAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/IdentityProofingAction'
    InvitationAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/InvitationAction'
    LdapAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/LdapAction'
    NotificationAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/NotificationAction'
    PasswordResetAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/PasswordResetAction'
    ProfileCheckAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/ProfileCheckAction'
    ProfileSelectAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/ProfileSelectAction'
    RequestAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/RequestAction'
    RestApiAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/RestApiAction'
    ReviewAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/ReviewAction'
    RunWorkflowAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/RunWorkflowAction'
    SetAttributesAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/SetAttributesAction'
    SetSecurityQuestionAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/SetSecurityQuestionAction'
    SoapApiAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/SoapApiAction'
    StatusChangeAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/StatusChangeAction'
    UnassignAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/UnassignAction'
    UpdateProfileAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/UpdateProfileAction'
    UsernamePasswordAction:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action:
                type: object
                $ref: '#/components/schemas/UsernamePasswordAction'
    WorkflowActionPerformers:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_action_performers:
                type: object
                $ref: '#/components/schemas/WorkflowActionPerformers'
    WorkflowSession:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_session:
                type: object
                $ref: '#/components/schemas/WorkflowSession-2'
    WorkflowSession-2:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              workflow_session:
                type: object
                $ref: '#/components/schemas/WorkflowSession-3'
